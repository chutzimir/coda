.\" COPYRIGHT NOTICE
.\" Copyright (c) 1994 Carnegie Mellon University
.\" All Rights Reserved.
.\" 
.\" See <cmu_copyright.h> for use and distribution information.
.\" 
.\" 
.\" HISTORY
.\" strarg.3,v
.\" Revision 1.1.1.1  1996/11/22 19:19:12  rvb
.\"  almost done
.\"
.\" Revision 1.1  1996/11/22 19:19:12  braam
.\" First Checkin (pre-release)
.\"
Revision 1.1  96/06/03  19:01:27  satya
Initial revision

.\" Revision 1.2  1995/10/18  14:59:23  moore
.\" 	Created libcs man(3) pages from mach entries
.\" 	[1995/10/18  14:56:19  moore]
.\"
.\" $EndLog$
.\" Copyright (c) 1990 Carnegie Mellon University
.\" All Rights Reserved.
.\" 
.\" Permission to use, copy, modify and distribute this software and its
.\" documentation is hereby granted, provided that both the copyright
.\" notice and this permission notice appear in all copies of the
.\" software, derivative works or modified versions, and any portions
.\" thereof, and that both notices appear in supporting documentation.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND CARNEGIE MELLON UNIVERSITY
.\" DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.  IN NO EVENT
.\" SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE FOR ANY SPECIAL, DIRECT,
.\" INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER
.\" RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF
.\" CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
.\" CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.\" Users of this software agree to return to Carnegie Mellon any
.\" improvements or extensions that they make and grant Carnegie the
.\" rights to redistribute these changes.
.\"
.\" Export of this software is permitted only after complying with the
.\" regulations of the U.S. Deptartment of Commerce relating to the
.\" Export of Technical Data.
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\" HISTORY
.\" strarg.3,v
.\" Revision 1.1.1.1  1996/11/22 19:19:12  rvb
.\"  almost done
.\"
.\" Revision 1.1  1996/11/22 19:19:12  braam
.\" First Checkin (pre-release)
.\"
Revision 1.1  96/06/03  19:01:27  satya
Initial revision

.\" Revision 1.2  1995/10/18  14:59:23  moore
.\" 	Created libcs man(3) pages from mach entries
.\" 	[1995/10/18  14:56:19  moore]
.\"
.\" Revision 1.1.1.2  1995/10/18  14:56:19  moore
.\" 	Created libcs man(3) pages from mach entries
.\"
.\" Revision 1.2  90/12/12  15:58:54  mja
.\" 	Add copyright/disclaimer for distribution.
.\" 
.\" 13-Nov-86  Andi Swimmer (andi) at Carnegie-Mellon University
.\" 	Revised for 4.3.
.\" 
.\" 23-Jan-80  Steven Shafer (sas) at Carnegie-Mellon University
.\" 	Searcharg added.
.\" 
.\" 05-Dec-79  Steven Shafer (sas) at Carnegie-Mellon University
.\" 	Created.
.\" 
.TH STRARG 3 1/23/80
.CM 1
.SH "NAME"
strarg, stabarg, searcharg \- parse string argument or ask user
.SH "SYNOPSIS"
.B
char *strarg (ptr,brk,prompt,defalt,buffer);
.br
.B
char **ptr,*brk,*prompt,*defalt,*buffer;
.sp
.B
int stabarg (ptr,brk,prompt,table,defalt);
.br
.B
char **ptr,*brk,*prompt,**table,*defalt;
.sp
.B
int searcharg (ptr,brk,prompt,table,defalt);
.br
.B
char **ptr,*brk,*prompt,**table,*defalt;
.SH "DESCRIPTION"
.I
Strarg
will attempt to parse an argument from a string, passing the
string pointer
.I
ptr
and the break character set
.I
brk
to the
.IR nxtarg (3)
routine.  If there is an argument parsed, then
it is copied into
.I
buffer
and
.I
strarg
returns
.I
buffer
as its value.
If there is no argument, then
.I
prompt, defalt,
and
.I
buffer
are passed to
.IR getstr (3),
whose value is returned by
.IR strarg .
.sp
.I
Stabarg
will attempt to parse an argument in the same way.
If there is
an argument, and it matches exactly one string in the string
array
.IR table ,
then the index of the matching string is returned by
.IR stabarg .
If there is no argument, or if it matches nothing in the 
.IR table
or many entries of the 
.IR table , 
then an error message is printed
and the remaining arguments
.RI ( prompt ,
.IR table ,
and
.IR defalt )
are passed into
.IR getstab (3).
The value returned by
.I
getstab
is then returned by
.IR stabarg .
.sp
.I
Searcharg
is just like
.IR stabarg ,
but performs a heuristic test for the best string match within the
.IR table , 
and allows the user to approve or disapprove this choice
if it is not a perfect match.  If the user does not approve the choice,
several other good matches are listed.
.sp
.IR Strarg , 
.IR stabarg ,
and
.I
searcharg
are especially useful for parsing strings from argument lists
in programs using the command interpreter,
.IR ci (3).
.SH "LIBRARY NOTES"
You must link against /usr/local/lib/libcs.a to define these routines.
.SH "SEE ALSO"
.IR nxtarg (3), 
.IR getstr (3), 
.IR getstab (3), 
.IR stlmatch (3), 
.IR ci (3)
.br
.IR getsearch (3), 
.IR stabsearch (3), 
.IR srchscore (3)

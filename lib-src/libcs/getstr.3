.\" COPYRIGHT NOTICE
.\" Copyright (c) 1994 Carnegie Mellon University
.\" All Rights Reserved.
.\" 
.\" See <cmu_copyright.h> for use and distribution information.
.\" 
.\" 
.\" HISTORY
.\" $Log$
.\" Revision 1.1  1996/11/22 19:19:21  braam
.\" First Checkin (pre-release)
.\"
Revision 1.1  96/06/03  19:00:42  satya
Initial revision

.\" Revision 1.2  1995/10/18  14:58:32  moore
.\" 	Created libcs man(3) pages from mach entries
.\" 	[1995/10/18  14:54:42  moore]
.\"
.\" $EndLog$
.\" Copyright (c) 1990 Carnegie Mellon University
.\" All Rights Reserved.
.\" 
.\" Permission to use, copy, modify and distribute this software and its
.\" documentation is hereby granted, provided that both the copyright
.\" notice and this permission notice appear in all copies of the
.\" software, derivative works or modified versions, and any portions
.\" thereof, and that both notices appear in supporting documentation.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND CARNEGIE MELLON UNIVERSITY
.\" DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.  IN NO EVENT
.\" SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE FOR ANY SPECIAL, DIRECT,
.\" INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER
.\" RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF
.\" CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
.\" CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.\" Users of this software agree to return to Carnegie Mellon any
.\" improvements or extensions that they make and grant Carnegie the
.\" rights to redistribute these changes.
.\"
.\" Export of this software is permitted only after complying with the
.\" regulations of the U.S. Deptartment of Commerce relating to the
.\" Export of Technical Data.
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\" HISTORY
.\" $Log$
.\" Revision 1.1  1996/11/22 19:19:21  braam
.\" First Checkin (pre-release)
.\"
Revision 1.1  96/06/03  19:00:42  satya
Initial revision

.\" Revision 1.2  1995/10/18  14:58:32  moore
.\" 	Created libcs man(3) pages from mach entries
.\" 	[1995/10/18  14:54:42  moore]
.\"
.\" Revision 1.1.1.2  1995/10/18  14:54:42  moore
.\" 	Created libcs man(3) pages from mach entries
.\"
.\" Revision 1.2  90/12/12  15:52:36  mja
.\" 	Add copyright/disclaimer for distribution.
.\" 
.\" 13-Nov-86  Andi Swimmer (andi) at Carnegie-Mellon University
.\" 	Revised for 4.3.
.\" 
.\" 23-Oct-82  Steven Shafer (sas) at Carnegie-Mellon University
.\" 	Error or EOF on standard input now causes default value to be used.
.\" 
.\" 22-Oct-81  Fil Alleva (faa) at Carnegie-Mellon University
.\" 	getstr now passes on error return from gets (3).
.\" 
.\" 23-Jan-80  Steven Shafer (sas) at Carnegie-Mellon University
.\" 	getsearch added.
.\" 
.\" 05-Dec-79  Steven Shafer (sas) at Carnegie-Mellon University
.\" 	Created.
.\" 
.TH GETSTR 3 10/23/82
.CM 3
.SH "NAME"
getstr, getstab, getsearch \- ask user to type a string
.SH "SYNOPSIS"
.B
#include <stdio.h>
.sp
.B
char *getstr (prompt,defalt,answer);
.br
.B
char *prompt,*defalt,*answer;
.sp
.B
int getstab (prompt,table,defalt);
.br
.B
int getsearch (prompt,table,defalt);
.br
.B
char *prompt,**table,*defalt;
.SH "DESCRIPTION"
.I
Getstr
will print
.I
prompt
as a message to the user, and ask for the user to type an
input string.
The string is then copied into
.I
answer.
If the user types just a carriage return, then the string
.I
defalt
is copied into
.I
answer.
.I
Answer
and
.I
defalt
may be the same string; in this case, the default value will
be the original contents of
.I
answer.
.sp
.I
Getstab
will print
.I
prompt
as a message to the user, and ask for an input string.
The string typed will be sought within the string table
.I
table,
and, if found, the index of this string will be returned.
If the user types just a carriage return, then the string
.I
defalt
will be assumed.
If nothing in the table matches the
input string, or if more than one string matches, then
an error message is printed and the prompt-and-response
cycle is repeated.
The string table may be declared this way:
.nf
.sp
	char *table[] = {
		"first string",
		"second string",
		...
		"n-th string",
		0};
.fi
.sp
.I
Getsearch
is just like
.I
getstab,
but performs a heuristic test for the quality of each string match,
and returns the index of the best match.
If the match is not exact,
the user is asked to approve or disapprove the choice of the
matching string; if he disapproves, several other closely matching
choices are listed.
.SH "LIBRARY NOTES"
You must link against /usr/local/lib/libcs.a to define these routines.
.SH "SEE ALSO"
.IR stablk (3), 
.IR stlmatch (3), 
.IR getint (3), 
.IR getbool (3), 
etc.
.br
.IR strarg (3), 
.IR stabarg (3)
.br
.IR srchscore (3), 
.IR stabsearch (3), 
.IR searcharg (3)

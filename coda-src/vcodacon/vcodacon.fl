# data file for the Fltk User Interface Designer (fluid)
version 1.0106 
header_name {.h} 
code_name {.cc}
decl {\#include "FL/fl_ask.H"} {} 

decl {\#include <stdlib.h>} {} 

decl {\#include "util.h"} {} 

decl {\#include "monitor.h"} {} 

decl {monitor Monitor;} {} 

Function {} {open
} {
  code {/*	$Id$	*/

// BLURB gpl
//
//                           Coda File System
//                              Release 6
//
//          Copyright (c) 1987-2005 Carnegie Mellon University
//                  Additional copyrights listed below
//
// This  code  is  distributed "AS IS" without warranty of any kind under
// the terms of the GNU General Public Licence Version 2, as shown in the
// file  LICENSE.  The  technical and financial  contributors to Coda are
// listed in the file CREDITS.
//} {}
  Fl_Window FindRealm {
    label {Find Realm} open
    xywh {70 89 390 70} type Double color 7 hide
  } {
    Fl_Input RealmName {
      label {Realm Name:}
      xywh {95 5 285 30}
    }
    Fl_Return_Button {} {
      label Find
      callback {if (do_findRealm(RealmName->value()))
  FindRealm->hide();
else
  fl_alert("Could not find realm %s", RealmName->value());}
      xywh {25 40 90 25} color 47
    }
    Fl_Button {} {
      label cancel
      callback {FindRealm->hide();}
      xywh {255 40 85 25}
    }
  }
  Fl_Window Clog {
    label clog open
    xywh {460 255 320 100} type Double color 7 hide
  } {
    Fl_Input clogUserName {
      label {User Name:}
      xywh {90 5 225 30}
    }
    Fl_Input clogPassword {
      label {Password:}
      xywh {90 35 225 25} type Secret
    }
    Fl_Return_Button {} {
      label clog
      callback {do_clog(clogUserName->value(),
        clogPassword->value());
Clog->hide();}
      xywh {15 65 90 25} color 47
    }
    Fl_Button {} {
      label cancel
      callback {Clog->hide();}
      xywh {200 65 85 25}
    }
  }
  Fl_Window Console {
    label {Coda Console Text} open
    xywh {34 120 570 395} type Double color 7 hide resizable
  } {
    Fl_Browser codacontext {
      xywh {0 25 575 375} resizable
    }
    Fl_Button {} {
      label {codacon text log}
      xywh {0 0 120 25} box NO_BOX color 7
      code0 {o->clear_visible_focus();}
    }
    Fl_Button {} {
      label {Close Window}
      callback {Console->hide();}
      xywh {450 0 120 25} color 1
    }
  }
  Fl_Window CTokens {
    label {Tokens List} open
    xywh {44 130 575 270} type Double color 7 hide resizable
  } {
    Fl_Browser TokenList {
      xywh {0 25 575 245} resizable
    }
    Fl_Button {} {
      label {ctokens output}
      xywh {0 0 120 25} box NO_BOX color 7
      code0 {o->clear_visible_focus();}
    }
    Fl_Button {} {
      label {Close Window}
      callback {CTokens->hide();}
      xywh {450 0 120 25} color 1
    }
  }
  Fl_Window Configure {
    label Configure open
    xywh {720 345 455 180} type Double color 7 hide
  } {
    Fl_Check_Button {mesgs[1]} {
      label bandwidth
      xywh {20 50 25 25} down_box DOWN_BOX
    }
    Fl_Check_Button {mesgs[2]} {
      label BackProbe
      xywh {20 75 25 25} down_box DOWN_BOX
    }
    Fl_Check_Button {mesgs[3]} {
      label fetch
      xywh {20 100 25 25} down_box DOWN_BOX
    }
    Fl_Check_Button {mesgs[4]} {
      label hoarding
      xywh {165 50 25 25} down_box DOWN_BOX
    }
    Fl_Check_Button {mesgs[5]} {
      label progress
      xywh {165 75 25 25} down_box DOWN_BOX
    }
    Fl_Check_Button {mesgs[6]} {
      label Callback
      xywh {165 100 25 25} down_box DOWN_BOX
    }
    Fl_Check_Button {mesgs[7]} {
      label Replace
      user_data 1
      xywh {285 50 25 25} down_box DOWN_BOX
    }
    Fl_Check_Button {mesgs[8]} {
      label store
      xywh {285 75 25 25} down_box DOWN_BOX
    }
    Fl_Check_Button {mesgs[9]} {
      label {any others}
      xywh {285 100 25 25} down_box DOWN_BOX
    }
    Fl_Button {} {
      label {Log to text window}
      xywh {25 15 340 30} box FLAT_BOX color 7 labelfont 1 labelsize 18
    }
    Fl_Return_Button {} {
      label Close
      callback {Configure->hide();}
      xywh {20 145 100 25} color 1
    }
    Fl_Button {} {
      label Save
      xywh {165 145 90 25} color 2
    }
  }
  Fl_Window MainWin {
    label VCodaCon open
    xywh {1090 700 195 80} type Double color 7 resizable visible
  } {
    Fl_Menu_Bar {} {open
      xywh {0 0 55 20} color 7
    } {
      submenu {} {
        label Menu open
        xywh {0 0 100 20}
      } {
        menuitem {} {
          label {find realm}
          callback {RealmName->value("");
FindRealm->show();}
          xywh {0 0 100 20}
        }
        submenu {} {
          label Tokens open
          xywh {5 5 100 20}
        } {
          menuitem {} {
            label CLog
            callback {Clog->show();}
            xywh {10 10 100 20}
          }
          menuitem {} {
            label Ctokens
            callback {do_ctokens();}
            xywh {20 20 100 20}
          }
          menuitem {} {
            label Cunlog
            callback {fl_alert("Not Implemented.");}
            xywh {10 10 100 20}
          }
        }
        menuitem {} {
          label Configure
          callback {Configure->show();}
          xywh {10 10 100 20}
        }
        menuitem {} {
          label Exit
          callback {exit(0);}
          xywh {0 0 100 20}
        }
      }
    }
    Fl_Progress {XferProg[0]} {
      label {Text Output}
      callback {XferProg[0]->hide();}
      xywh {0 20 195 20} selection_color 2 align 80 deactivate resizable
      code0 {o->clear_visible_focus();}
    }
    Fl_Progress {XferProg[1]} {
      label {Text Output}
      callback {XferProg[2]->hide();}
      xywh {0 40 195 20} selection_color 2 align 80 deactivate
      code0 {o->clear_visible_focus();}
    }
    Fl_Progress {XferProg[2]} {
      label {Text Output}
      callback {XferProg[3]->hide();}
      xywh {0 60 195 20} selection_color 2 align 80 deactivate
      code0 {o->clear_visible_focus();}
    }
    Fl_Button VConn {
      label V
      callback {// red when no connection
// green when a connection

Monitor.ForceClose();}
      tooltip {Venus Connection Status} xywh {55 0 20 20} color 7
      code0 {o->clear_visible_focus();}
    }
    Fl_Button VAct {
      label A
      callback {// Blinks when there is activity
// click on it gets the log

Console->show();}
      tooltip {codacon activity} xywh {75 0 20 20} color 7
      code0 {o->clear_visible_focus();}
    }
    Fl_Button VWalk {
      label H
      callback {system("hoard walk");} selected
      tooltip {Hoard Walk in progress} xywh {95 0 20 20} color 7
      code0 {o->clear_visible_focus();}
    }
    Fl_Button VStore {
      label S
      callback {// Clear when no store in progress
// blue when store in progress.}
      tooltip {Store in progress indicator} xywh {115 0 20 20} color 7
      code0 {o->clear_visible_focus();}
    }
    Fl_Button VReint {
      label R
      callback {// Clear when no reintegrate in progress
// yellow when reintegrate in progress.}
      tooltip {Reintegrate in progress indicator} xywh {135 0 20 20} color 7
      code0 {o->clear_visible_focus();}
    }
    Fl_Button VDisConn {
      label D
      callback {// Hidden when connected
// Yellow and visible when disconnected}
      tooltip {Disconnected operation} xywh {155 0 20 20} color 7
      code0 {o->clear_visible_focus();}
    }
    Fl_Button VConfl {
      label C
      tooltip {Volume in conflict} xywh {175 0 20 20} color 7
      code0 {o->clear_visible_focus();}
    }
  }
  code {// Initialization
MainInit (&argc, &argv);

// Open mariner port and initialize the monitor
Monitor.Start();} {}
} 

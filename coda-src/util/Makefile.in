# 
#             Coda: an Experimental Distributed File System
#                              Release 4.0
# 
#           Copyright (c) 1987-1996 Carnegie Mellon University
#                          All Rights Reserved
# 
# Permission  to  use, copy, modify and distribute this software and its
# documentation is hereby granted,  provided  that  both  the  copyright
# notice  and  this  permission  notice  appear  in  all  copies  of the
# software, derivative works or  modified  versions,  and  any  portions
# thereof, and that both notices appear in supporting documentation, and
# that credit is given to Carnegie Mellon University  in  all  documents
# and publicity pertaining to direct or indirect use of this code or its
# derivatives.
# 
# CODA IS AN EXPERIMENTAL SOFTWARE SYSTEM AND IS  KNOWN  TO  HAVE  BUGS,
# SOME  OF  WHICH MAY HAVE SERIOUS CONSEQUENCES.  CARNEGIE MELLON ALLOWS
# FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.   CARNEGIE  MELLON
# DISCLAIMS  ANY  LIABILITY  OF  ANY  KIND  FOR  ANY  DAMAGES WHATSOEVER
# RESULTING DIRECTLY OR INDIRECTLY FROM THE USE OF THIS SOFTWARE  OR  OF
# ANY DERIVATIVE WORK.
# 
# Carnegie  Mellon  encourages  users  of  this  software  to return any
# improvements or extensions that  they  make,  and  to  grant  Carnegie
# Mellon the rights to redistribute these changes without encumbrance.
# 



TOPDIR = @top_srcdir@
ifndef MAKDIR
MAKDIR = @top_srcdir@
endif
srcdir = @srcdir@
VPATH  = @srcdir@
TOPOBJ = @TOPOBJ@

include $(MAKDIR)/Makeconf

LIBRARIES = libutil.a
COMMONHEADERS   = util.h olist.h ohash.h dlist.h dhash.h bstree.h dict.h \
	    histo.h rvmlib.h rec_olist.h \
	    rec_smolist.h rec_ohash.h rec_dlist.h rec_dhash.h rec_bstree.h \
	    vmindex.h bitmap.h arrlist.h recvarl.h rvmtesting.h bitvect.h\
	    proc.h 


# Multiversion definitions

COMMONOBJECTS = util.o olist.o ohash.o dlist.o dhash.o bstree.o dict.o  \
	  histo.o rvmlib.o rec_olist.o rec_smolist.o rec_ohash.o rec_dlist.o \
	  rec_dhash.o rec_bstree.o bitmap.o vmindex.o arrlist.o recvarl.o \
	  rvmtesting.o bitvect.o proc.o

ifneq ($(SHORTSYS),djgpp)
HEADERS = $(COMMONHEADERS) parser.h
OBJECTS = $(COMMONOBJECTS) parser.o
else
HEADERS = $(COMMONHEADERS)
OBJECTS = $(COMMONOBJECTS) 
endif


libutil.a: ${OBJECTS} 

parser.o: parser.c parser.h
	$(CC) $(CFLAGS) $(INCREADLINE) -c $< -o parser.o

include $(MAKDIR)/configs/Makerules

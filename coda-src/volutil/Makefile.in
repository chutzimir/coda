# 
#             Coda: an Experimental Distributed File System
#                              Release 4.0
# 
#           Copyright (c) 1987-1996 Carnegie Mellon University
#                          All Rights Reserved
# 
# Permission  to  use, copy, modify and distribute this software and its
# documentation is hereby granted,  provided  that  both  the  copyright
# notice  and  this  permission  notice  appear  in  all  copies  of the
# software, derivative works or  modified  versions,  and  any  portions
# thereof, and that both notices appear in supporting documentation, and
# that credit is given to Carnegie Mellon University  in  all  documents
# and publicity pertaining to direct or indirect use of this code or its
# derivatives.
# 
# CODA IS AN EXPERIMENTAL SOFTWARE SYSTEM AND IS  KNOWN  TO  HAVE  BUGS,
# SOME  OF  WHICH MAY HAVE SERIOUS CONSEQUENCES.  CARNEGIE MELLON ALLOWS
# FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.   CARNEGIE  MELLON
# DISCLAIMS  ANY  LIABILITY  OF  ANY  KIND  FOR  ANY  DAMAGES WHATSOEVER
# RESULTING DIRECTLY OR INDIRECTLY FROM THE USE OF THIS SOFTWARE  OR  OF
# ANY DERIVATIVE WORK.
# 
# Carnegie  Mellon  encourages  users  of  this  software  to return any
# improvements or extensions that  they  make,  and  to  grant  Carnegie
# Mellon the rights to redistribute these changes without encumbrance.
# 
# static char *rcsid = "$Header$";


# 
#                          IBM COPYRIGHT NOTICE
# 
#                           Copyright (C) 1986
#              International Business Machines Corporation
#                          All Rights Reserved
# 
# This  file  contains  some  code identical to or derived from the 1986
# version of the Andrew File System ("AFS"), which is owned by  the  IBM
# Corporation.    This  code is provded "AS IS" and IBM does not warrant
# that it is free of infringement of  any  intellectual  rights  of  any
# third  party.    IBM  disclaims  liability of any kind for any damages
# whatsoever resulting directly or indirectly from use of this  software
# or  of  any  derivative work.  Carnegie Mellon University has obtained
# permission to distribute this code, which is based on Version 2 of AFS
# and  does  not  contain the features and enhancements that are part of
# Version 3 of AFS.  Version 3 of  AFS  is  commercially  available  and
# supported by Transarc Corporation, Pittsburgh, PA.
# 


TOPDIR = @top_srcdir@
ifndef MAKDIR
MAKDIR = @top_srcdir@
endif
srcdir = @srcdir@
VPATH  = @srcdir@
TOPOBJ = @TOPOBJ@

include $(MAKDIR)/Makeconf

EXECUTABLES = volutil parserecdump backup readdump merge
SSBINS      = $(EXECUTABLES)
LIBRARIES   = libvolutil.a libvolserv.a
HEADERS     = volutil.private.h
RP2FILES    = $(VOLUTIL_RPC2) $(VOLDUMP_RPC2)
RP2HEADERS  = $(notdir ${RP2FILES:.rpc2=.h})

LIBS =	${LIBVOL} \
	${LIBVV} \
	$(LIBVICEDEP)\
	${LIBRPC2} \
	${LIBSE} \
	${LIBCODARDS} \
	${LIBSEG} \
	${LIBCODARVM} \
	${LIBPARTITION}\
	${LIBUTIL} \
	${LIBOLDLWP} \
	${LIBSYSENT} \
	${LIBMACH}  \
	${LIBREADLINE} \
	$(LIBCOMPAT) \
	$(LIBTERMCAP)
        

#HFILES= $(INCLDIR)/voldump.rpc2 $(INCLDIR)/volutil.rpc2 \
#	dump.h dumpstream.h vol-dumprecstore.h vol-rcvheap.h \
#	volutil.private.h vvlist.h \
#	${INCLDIR}/srv.h ${INCLDIR}/errors.h \
#	${INCLDIR}/srvsignal.h ${INCLDIR}/fssync.h ${INCLDIR}/index.h \
#	${INCLDIR}/partition.h ${INCLDIR}/recov.h \
#	 ${INCLDIR}/vldb.h ${INCLDIR}/cvnode.h \
#	${INCLDIR}/voldefs.h ${INCLDIR}/volume.h


LOCALOBJS = readstuff.o dumpstuff.o vvlist.o

# Keep these in alphabetical order, and 1 per line for easy
# comparison with ls output 
VOLUTILOBJS = \
	listinodes.o \
	physio.o \
	vol-ancient.o \
	vol-backup.o \
	vol-clone.o \
	vol-create.o \
	vol-dump.o \
	vol-dumpmem.o \
	vol-elapse.o \
	vol-info.o \
	vol-lock.o \
	vol-lookup.o \
	vol-makevldb.o \
	vol-makevrdb.o \
	vol-maxid.o \
	vol-peekpoke.o \
	vol-purge.o \
	vol-restore.o \
	vol-rvmsize.o \
	vol-salvage.o \
	vol-setvv.o \
	vol-setlogparms.o \
	vol-showvnode.o \
	vol-timing.o \
	vol-tracerpc.o\
	vol-printstats.o\
	vol-showcallbacks.o\
	vol-rvmtrunc.o\
	${LOCALOBJS}

VOLCLIENTOBJS = volclient.o 

OBJS =		${VOLUTILOBJS} ${VOLCLIENTOBJS}


libvolutil.a:	${VOLUTILOBJS} 
libvolserv.a:   volutil.o

parserecdump.o:	parserecdump.cc vol-dumprecstore.h

local.a: ${LOCALOBJS}

# ${OBJS} ${LOCALOBJS}: ${HFILES}

volutil:    ${VOLCLIENTOBJS} ${LIBS}
	${CXX} $(LIBFLAGS) ${VOLCLIENTOBJS} ${LIBS} -o volutil

merge:	merge.o dumpstream.o dumpstuff.o ${LIBS}
	$(CXX) $(LIBFLAGS) merge.o dumpstream.o dumpstuff.o ${LIBS} -o merge

backup: backup.o ${LIBS}
	$(CXX) $(LIBFLAGS) backup.o ${LIBS} -lm -o backup

readdump: readdump.o dumpstream.o dumpstuff.o ${LIBS}
	$(CXX) $(LIBFLAGS) readdump.o dumpstream.o dumpstuff.o ${LIBS} -o readdump

parserecdump: parserecdump.o ${LIBS}
	$(CXX) $(LIBFLAGS) parserecdump.o ${LIBS} -o parserecdump

include $(MAKDIR)/configs/Makerules









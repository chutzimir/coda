# BLURB gpl
# 
#                            Coda File System
#                               Release 5
# 
#           Copyright (c) 1987-1999 Carnegie Mellon University
#                   Additional copyrights listed below
# 
# This  code  is  distributed "AS IS" without warranty of any kind under
# the terms of the GNU General Public Licence Version 2, as shown in the
# file  LICENSE.  The  technical and financial  contributors to Coda are
# listed in the file CREDITS.
# 
#                         Additional copyrights
# 
#*/

#                          IBM COPYRIGHT NOTICE
# 
#                           Copyright (C) 1986
#              International Business Machines Corporation
#                          All Rights Reserved
# 
# This  file  contains  some  code identical to or derived from the 1986
# version of the Andrew File System ("AFS"), which is owned by  the  IBM
# Corporation.   This  code is provided "AS IS" and IBM does not warrant
# that it is free of infringement of  any  intellectual  rights  of  any
# third  party.    IBM  disclaims  liability of any kind for any damages
# whatsoever resulting directly or indirectly from use of this  software
# or  of  any  derivative work.  Carnegie Mellon University has obtained
# permission to  modify,  distribute and sublicense this code,  which is
# based on Version 2  of  AFS  and  does  not  contain  the features and
# enhancements that are part of  Version 3 of  AFS.  Version 3 of AFS is
# commercially   available   and  supported  by   Transarc  Corporation,
# Pittsburgh, PA.
# 


TOPDIR = @top_srcdir@

srcdir = @srcdir@
VPATH  = @srcdir@
TOPOBJ = @TOPOBJ@

include $(TOPDIR)/Makeconf

EXECUTABLES = volutil parserecdump backup readdump merge
SSBINS      = $(EXECUTABLES)
LIBRARIES   = libvolutil.a libvolserv.a
HEADERS     = volutil.private.h

DEPLIBS := ${LIBVOL} ${LIBVV} $(LIBVICEDEP) ${LIBPARTITION} ${LIBUTIL} \
	   ${LIBSYSENT} ${LIBBASE}

LIBS := ${DEPLIBS} ${LIBRDSLWP} ${LIBSEG} ${LIBRVMLWP} ${LIBSE} ${LIBRPC2} \
	${LIBLWP} ${LIBREADLINE} $(LIBTERMCAP) $(LIBMD5) $(LIBS)


LOCALOBJS = readstuff.o dumpstuff.o vvlist.o

# Keep these in alphabetical order, and 1 per line for easy
# comparison with ls output 
VOLUTILOBJS = \
	vol-ancient.o \
	vol-backup.o \
	vol-clone.o \
	vol-create.o \
	vol-dump.o \
	vol-dumpmem.o \
	vol-dumpvrdb.o \
	vol-info.o \
	vol-lock.o \
	vol-lookup.o \
	vol-makevldb.o \
	vol-makevrdb.o \
	vol-maxid.o \
	vol-peekpoke.o \
	vol-purge.o \
	vol-restore.o \
	vol-rvmsize.o \
	vol-salvage.o \
	vol-setvv.o \
	vol-setlogparms.o \
	vol-setwbparms.o \
	vol-showvnode.o \
	vol-timing.o \
	vol-tracerpc.o\
	vol-printstats.o\
	vol-getvolumelist.o\
	vol-showcallbacks.o\
	vol-rvmtrunc.o\
	${LOCALOBJS}


VOLCLIENTOBJS = volclient.o 

OBJS =		${VOLUTILOBJS} ${VOLCLIENTOBJS}

include $(TOPDIR)/configs/Makerules

libvolutil.a:	${VOLUTILOBJS} 
libvolserv.a:   volutil.o

parserecdump.o:	parserecdump.cc

local.a: ${LOCALOBJS}


volutil:    ${VOLCLIENTOBJS} ${DEPLIBS}
	${CXX} $(LDFLAGS) ${VOLCLIENTOBJS} ${LIBS} -lm -o volutil

merge:	merge.o dumpstream.o dumpstuff.o ${DEPLIBS}
	$(CXX) $(LDFLAGS) merge.o dumpstream.o dumpstuff.o ${LIBS} -o merge

backup: backup.o ${DEPLIBS}
	$(CXX) $(LDFLAGS) backup.o ${LIBS} -lm -o backup

readdump: readdump.o dumpstream.o dumpstuff.o ${DEPLIBS}
	$(CXX) $(LDFLAGS) readdump.o dumpstream.o dumpstuff.o ${LIBS} -o readdump

parserecdump: parserecdump.o ${DEPLIBS} 
	$(CXX) $(LDFLAGS) parserecdump.o ${LIBS} -o parserecdump



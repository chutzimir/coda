# 
#             Coda: an Experimental Distributed File System
#                              Release 4.0
# 
#           Copyright (c) 1987-1996 Carnegie Mellon University
#                          All Rights Reserved
# 
# Permission  to  use, copy, modify and distribute this software and its
# documentation is hereby granted,  provided  that  both  the  copyright
# notice  and  this  permission  notice  appear  in  all  copies  of the
# software, derivative works or  modified  versions,  and  any  portions
# thereof, and that both notices appear in supporting documentation, and
# that credit is given to Carnegie Mellon University  in  all  documents
# and publicity pertaining to direct or indirect use of this code or its
# derivatives.
# 
# CODA IS AN EXPERIMENTAL SOFTWARE SYSTEM AND IS  KNOWN  TO  HAVE  BUGS,
# SOME  OF  WHICH MAY HAVE SERIOUS CONSEQUENCES.  CARNEGIE MELLON ALLOWS
# FREE USE OF THIS SOFTWARE IN ITS "AS IS" CONDITION.   CARNEGIE  MELLON
# DISCLAIMS  ANY  LIABILITY  OF  ANY  KIND  FOR  ANY  DAMAGES WHATSOEVER
# RESULTING DIRECTLY OR INDIRECTLY FROM THE USE OF THIS SOFTWARE  OR  OF
# ANY DERIVATIVE WORK.
# 
# Carnegie  Mellon  encourages  users  of  this  software  to return any
# improvements or extensions that  they  make,  and  to  grant  Carnegie
# Mellon the rights to redistribute these changes without encumbrance.
# 
# static char *rcsid = "$Header$";

TOPDIR = @top_srcdir@
ifndef MAKDIR
MAKDIR = @top_srcdir@/configs
endif
srcdir = @srcdir@
VPATH  = @srcdir@
TOPOBJ = @TOPOBJ@

include $(MAKDIR)/Makeconf

EXECUTABLES = ttyfcon partition heal slow
CBINS       = $(EXECUTABLES)
SBINS       = $(EXECUTABLES)
LIBRARIES   = libfail.a
HEADERS     = ${RP2FILES} fail.h ${RP2HEADERS}

RP2FILES    = fcon.rpc2
RP2HEADERS  = $(notdir ${RP2FILES:.rpc2=.h})

# sadly this is not C++ so rp2gen needs different flags.
RP2FLAGS:=

#LIBS = ${LIBRPC2} ${LIBSE} ${LIBOLDLWP} ${LIBCS} ${LIBCOMPAT} -lm

LIBS = ${LIBRPC2} ${LIBSE} ${LIBOLDLWP} ${LIBCS} ${LIBCOMPAT} 

# No longer of interest: tvclient tvserver ftclient ftserver 
LIBOBJS = fcon.client.o fcon.server.o fcon.o fail.o delay.o 

libfail.a: ${LIBOBJS}

ttyfcon: ttyfcon.o libfail.a ${LIBS}
	${CC} ${LIBFLAGS} ttyfcon.o libfail.a ${LIBS} -o ttyfcon

partition: partition.o libfail.a ${LIBS}
	${CC} ${LIBFLAGS} partition.o libfail.a ${LIBS} -o partition

heal:  heal.o libfail.a ${LIBS}
	${CC} ${LIBFLAGS} heal.o libfail.a ${LIBS} -o heal

slow:  slow.o libfail.a ${LIBS}
	${CC} ${LIBFLAGS} slow.o libfail.a ${LIBS} -o slow

fcon.client.c: $(srcdir)/fcon.rpc2
	${RP2GEN} ${RP2FLAGS} $<

fail.o: fail.c fcon.h fail.h
fcon.client.o: fcon.client.c
fcon.server.o: fcon.server.c
ttyfcon.o: ttyfcon.c fcon.h

include $(MAKDIR)/Makerules

.TH "REPAIR" "1" "25 April 2005" "Coda Distributed File System" ""

.SH NAME
repair \- Repair conflicts in the Coda Distributed File    System
.SH SYNOPSIS

\fBrepair\fR \fB-d\fR


\fBrepair\fR \fB-allowclear\fR


\fBrepair\fR \fBobject_in_conflict\fR \fBfixfile\fR [ \fBrepair_options\fR ]

.SH "DESCRIPTION"
.PP
The Coda repair tool allows you to manually resolve two kinds
of conflicts resulted from partitioned updates. Server-server
conflicts are conflicting mutations performed on partitioned servers
that can not be automatically resolved. Local-global conflicts are
caused by mutations performed on a disconnected client that are in
conflict with the global server state.
.PP
To use the repair tool interactively, type
\fBrepair\fR at the command prompt.
.PP
Server-Server conflicts can be repaired from the command line
without entering interactive mode. This is useful if you need to
repair many conflicts within a volume at a time and wish to write a
shell script. Please see the \fBEXAMPLES\fR section
for examples on invoking complete repair sequences from the command
line.
.PP
A description of the \fBrepair\fR commands follows:
.TP
\fBbeginrepair \fIobject\fB\fR
verifies that \fIobject\fR is
indeed in conflict. It will print out messages to indicate
whether the current repair session is for server-server
conflict or local-global conflict.

For a server-server repair session, this command locks
the corresponding volume and and mounts its individual
replicas read-only. It will inform the users to only use the
\fBcomparedirs\fR, \fBdorepair\fR
and \fBremoveinc\fR commands to repair the conflict.

For a local-global repair session, both local and
global replicas of \fIobject\fR are
visible at \fBobject/local\fR (read-only) and
\fBobject/global\fR (mutable and serving as
the workspace for storing the repair result for
\fIobject\fR). You need to iterate
through the current sessions
\fBlocal-mutations-list\fR containing all the
local updates to \fIobject\fR and its
descendants. Each operation in
\fBlocal-mutations-list\fR must be accounted
for and Venus maintains the
\fBcurrent-mutation\fR being iterated. Use
the \fBchecklocal\fR command to find out the
conflict between the \fBcurrent-mutation\fR
and the server state. Note that not all local mutations are
necessarily in conflict, and you can use the
\fBlistlocal\fR command to see all the
operations in \fBlocal-mutations-list\fR\&. You
can advance the iteration to the next operation using either
the \fBpreservelocal\fR or the
\fBdiscardlocal\fR command with the former
replaying the \fBcurrent-mutation\fR
operation on the relevant global replicas. To speed up the
iteration, the \fBpreservealllocal\fR command
repeats \fBpreservelocal\fR until the
\fBlocal-mutations-list\fR is exhausted or
the first replay failure. Similarly, the
\fBdiscardalllocal\fR command repeats
\fBdiscardlocal\fR until exhausting the
\fBlocal-mutations-list\fR\&. You can use
external tools such as
\fBemacs\fR(1)
to make direct updates on needed replicas under
\fBobject/global\fR\&. Use the
\fBquit\fR command to either commit or abort
the session.
.TP
\fBquit\fR
If the current session is repairing a server-server
conflict, this command releases all the volume-level locks
and causes the repair tool to return to the shell. If the
current session is repairing a local-global conflict, this
command asks you whether to commit or abort the repair
session. If you answer yes, the mutations performed on the
relevant global replicas will be committed to the servers.
Otherwise, the repair result will be aborted as if this
repair session has never happened.
.TP
\fBhelp\fR
Prints out a help message.
.PP
Use the following commands to repair a server-server conflict:
.TP
\fBcomparedirs \fIobject\fB \fIfixfile\fB [ -acl \fIuser\fB \fIrwlidka\fB ] [ -mode \fInewmode\fB ] [ -owner \fIusername\fB ] \fR
Compares the mounted read-only replicas of a directory
in conflict and prints the repair commands in fixfile to
make the replicas identical. To print out the repair
commands on your terminal give stdout as the pathname for
fixfile. Compensating actions for Name/Name conflicts and
Update/Update conflicts are not given. The user is only told
about their existence and required to edit the fixfile
manually. You should have already done a
\fBbeginrepair\fR on
\fIobject\fR and this command works
only if \fIobject\fR is a directory.
.TP
\fBdorepair \fIobject\fB \fIfixfile\fB \fR
Does the actual repair of an object.  If the  repair
succeeds,  each accessible replica will be marked
consistent. You will be prompted for the arguments if they
are missing, and  will be  asked  to confirm the repair.
You should have already done a
\fBbeginrepair\fR on this object (or on on some
other object in this volume.). If
\fIobject\fR is a file or symbolic
link, \fIfixfile\fR must  provide its
new  contents.  If \fIobject\fR is a
directory, \fIfixfile\fR must provide a
sequence of directory repair commands for each replica. The
format of fixfile for directories is as follows:

.nf
replica <servername> <id of replica1>
    <repair commands for replica1>
replica <servername> <id of replica2>
    <repair commands for  replica2>
and so on
.fi

Repair commands are given one per line.  Blank lines
are ok. \fBid of replica1\fR, \fBid of
replica2\fR, etc. are  numbers that identify each
replica.  These are the same as the volume  ids  of
read-write volumes corresponding to a replicated volume.
The volume ids can be obtained by doing an ls on the
inconsistent object, after the
\fBbeginrepair\fR command has succeeded.  The
directory repair commands are:

.nf
createf <filename> <fid.0> <fid.1> <fid.2>
creates <symlinkname> <fid.0> <fid.1> <fid.2>
createl <linkname> <fid.0> <fid.1> <fid.2>
created <dirname> <fid.0> <fid.1> <fid.2>
removefsl  <filename or symlinkname or linkname>
removed  <dirname>
mv <srcname> <tgtname>
    <src <fid.0> <fid.1> <fid.2>>
    <target <fid.1> <fid.2>>
setacl  <username> [rwlikda]
delacl  <username>
setmode <newmode>
setowner <new owner name>
setmtime <new modified time>
.fi

Note that for the \fBsetacl\fR command,
the short form access rights of \fBall\fR and
\fBnone\fR can also be used.
.TP
\fBremoveinc \fIobject\fB \fR
Removes the inconsistent
\fIobject\fR if it is file or a
symbolic link. If the object is a directory, all the
descendants of the object will be removed in all the
accessible replicas and the directory itself will be removed
as long as its replicas are identical. If the owner or the
ACL of the directory replicas are different, you have to
repair the conflict first.
.TP
\fBclearinc \fIobject\fB \fR
Compares the mounted read only replicas of a directory
in conflict and if the replicas are identical it clears the
inconsistency flag of the replicas. Otherwise it will inform
you about the inequality of the replicas. You should run the
\fBcomparedirs\fR command to find out the cause
of conflict. This command should be used only for
directories. Files and symbolic links are cleared of their
inconsistency with the \fBdorepair\fR command.
.PP
The following commands are used only for repairing
local-global conflicts:
.TP
\fBchecklocal\fR
Checks to see if the
\fBcurrent-mutation\fR being iterated by the
current local-global repair session is in conflict with the
server state. It displays the operator and operand (s) of
the \fBcurrent-mutation\fR operation and
indicates whether it is in conflict with the relevant server
replicas. If it is in conflict, a brief reason of the
conflict is given. Note that this command does not advance
the iteration of the
\fBlocal-mutations-list\fR\&.
.TP
\fBdiscardlocal\fR
Simply advances the iteration of the
\fBlocal-mutations-list\fR of the current
local-global repair session to the next operation. Use this
command when the user does not want the
\fBcurrent-mutation\fR operation to have any
effect on the repair result.
.TP
\fBpreservelocal\fR
Tries to replay the
\fBcurrent-mutation\fR of the current
local-global repair session on the relevant global replicas.
In other words, it will try to preserve the effect of the
\fBcurrent mutation\fR in the repair result.
If the replay succeeds, the iteration of
\fBlocal-mutations-list\fR will be advanced
to the next operation. The effect of the replay is visible
only on this client and not on the server until the repair
result is successfully committed. If the replay fails,
information about the reason of the failure will be
displayed.  
.TP
\fBdiscardalllocal\fR
Repeatedly performs the
\fBdiscardlocal\fR command until the
\fBlocal-mutations-list\fR is exhausted. Its
effect is to finish the iteration and discard the effect of
all the remaining mutations on the repair result.
.TP
\fBpreservealllocal\fR
Repeatedly performs the
\fBpreservelocal\fR command until the first
failure or the iteration of
\fBlocal-mutations-list\fR is exhausted. This
command is used if the user wants to preserve the effect of
all the remaining mutation operations in the repair result.
.TP
\fBlistlocal\fR
Prints out all the mutation operations in the
\fBlocal-mutations-list\fR of the current
local-global repair session.
.PP
The following commands existed in old versions but are no
longer supported:
.TP
\fBshowreplicas \fIobject\fB \fR
Shows the names of the individual replicas of
\fIobject\fR, and the pathnames by
which these replicas may be examined read-only. A
\fBbeginrepair\fR must have been done earlier
on this object (or on another object in the same volume).
.TP
\fBunlockvolume \fIpathname\fB \fR
Tells Venus to unlock the specified  volume  in
repair.   No check  is done to see if you locked the volume
during this repair session.  The primary use of this command
is to unlock volumes that were locked during a previous,
aborted, invocation of the repair tool.  The command will
fail if Venus discovers that you do not hold the repair lock
on the server.   This could happen, for example, if your
aborted repair occurred on another workstation, or if you
were not repairing the volume in the first place.
.SH "EXAMPLES"
.PP
This will cause repair to examine the object "common",
generate a fix file for it and in addition to the contents of the
fix file, and set the acl for hmpierce to \fBrlidwka\fR on the
replica.

.nf
repair common /tmp/fix -acl hmpierce all
.fi
.PP
The same repair would look like this in interactive mode:

.nf
repair> beginrepair common
repair> comparedirs common /tmp/fix -acl hmpierce all
repair> dorepair common /tmp/fix 
repair> endrepair
repair> quit
.fi
.SH "AUTHORS"
.PP
.TP 0.2i
\(bu
M. Satyanarayanan, 1989, Created
.TP 0.2i
\(bu
Puneet Kumar, 1991, Substantially revised
.TP 0.2i
\(bu
Joshua Raiff, 1993, Created man page
.TP 0.2i
\(bu
Qi Lu, 1995, Added local-global repair commands and
revised man page
.TP 0.2i
\(bu
Henry M. Pierce, 1998, updated for command line
options

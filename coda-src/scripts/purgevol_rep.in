#!/bin/sh 
# BLURB gpl
# 
#                            Coda File System
#                               Release 6
# 
#           Copyright (c) 1987-2003 Carnegie Mellon University
#                   Additional copyrights listed below
# 
# This  code  is  distributed "AS IS" without warranty of any kind under
# the terms of the GNU General Public Licence Version 2, as shown in the
# file  LICENSE.  The  technical and financial  contributors to Coda are
# listed in the file CREDITS.
# 
#                         Additional copyrights
#                            none currently
# 
#*/

PATH=$PATH:@prefix@/sbin
export PATH

# load the server configuration file
vicedir=/vice
. "`codaconfedit server.conf`"

if [ `cat ${vicedir}/hostname` != `cat ${vicedir}/db/scm` ]
then
        echo "This must be run from the scm ("`cat ${vicedir}/db/scm`")"
        exit 1
fi

# Check that the input parameters are correct
if [ $# = 0 -o "$1" = "-h" -o "$1" = "--help" ]
then
	echo "purgevol_rep volumename"
	exit 1
fi

if [ "$1" = "--kill" ]
then
    dryrun=0
    shift
else
    dryrun=1
    echo "Only testing, use 'purgevol_rep --kill $1' to really purge the volume"
fi

# Look up the replicated volume name in ${vicedir}/db/VRList to determine the
# VolIDs of the replicated copies.
REPVOLNAME=$1
REPS=`awk '$1 ~ /^'$REPVOLNAME'$/ {for (i=4; i< $3 + 4; i++) printf "%s ", $i}' ${vicedir}/db/VRList`


# Check to see if the volume actually exists 
if [ -z "$REPS" ]
then
	echo "Volume" $REPVOLNAME "doesn't exist!"
	exit 1
fi

REPVOLID=`awk '$1 ~ /^'$REPVOLNAME'$/ {print $2}' ${vicedir}/db/VRList`
VSG=`awk '$1 ~ /^'$REPVOLNAME'$/ {print $12}' ${vicedir}/db/VRList`
HOSTS=`grep -i "^$VSG" ${vicedir}/db/VSGDB | sed "s/$VSG//"`


# Remove the individual copies
for host in $HOSTS
do
  volumelist=`volutil -h $host getvolumelist 2>/dev/null`

  for repid in $REPS 
  do
    volumes=`echo "$volumelist" | awk '$8 ~/^W'$repid'$/ { print $2 }'`

    for vid in $volumes
    do
      volid=`echo $vid | cut -c2-`
      volname=`echo "$volumelist" | grep "I$volid" | cut -d' ' -f1 | cut -c2-`

      if [ $dryrun = 0 ] ; then
        echo "Purging $volname ($volid) from $host"
        volutil -h "$host" purge "$volid" "$volname" 2>/dev/null
      else
        echo "Would have purged $volname ($volid) from $host"
      fi
    done
  done
done

if [ $dryrun = 0 ] ; then
  # Delete the entry for the volume from the VRList
  awk ' $1 !~ /^'$REPVOLNAME'$/ { print } ' ${vicedir}/db/VRList >${vicedir}/db/VRList.tmp
  mv ${vicedir}/db/VRList.tmp ${vicedir}/db/VRList

  # Delete the entry from the backup list.
  awk ' $1 !~ /^'$REPVOLID'$/ { print } ' ${vicedir}/db/dumplist >${vicedir}/db/dumplist.tmp
  mv ${vicedir}/db/dumplist.tmp ${vicedir}/db/dumplist

  # Make sure that the vldb and vrdb are updated.
  volutil makevrdb ${vicedir}/db/VRList
  bldvldb.sh $HOSTS 
else
  echo "Don't forget we were only testing"
  echo "use 'purgevol_rep --kill $1' to really purge the volume"
fi


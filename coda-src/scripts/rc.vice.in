#!/bin/sh
#
# skeleton      Example file to build /etc/init.d scripts.
#
# Version:      @(#) /etc/init.d/skeleton 1.01 26-Oct-1993
#
# Author:       Miquel van Smoorenburg, <miquels@drinkel.nl.mugnet.org>
#
# Modified:     Henry M. Pierce <hmpierce@cs.cmu.edu> for *BSD only...

VICE=/vice
VICESRV=${VICE}/srv

OSTYPE=`uname`

CODABASE=@prefix@
PATH=/sbin:/usr/sbin:@prefix@/sbin:$PATH
export PATH

AUTH2=${CODABASE}/sbin/auth2

if [ -x ${CODABASE}/sbin/kauth2 ] ; then
    AUTH2=${CODABASE}/sbin/kauth2
    FLAGS="-realm CS.CMU.EDU"
fi

[ -x ${AUTH2} ] || exit 1
[ -x ${CODABASE}/sbin/rpc2portmap ] || exit 1
[ -x ${CODABASE}/sbin/updatesrv ] || exit 1
[ -x ${CODABASE}/sbin/updateclnt ] || exit 1
[ -x ${CODABASE}/sbin/codasrv ] || exit 1
[ -x ${CODABASE}/sbin/startserver ] || exit 1
[ -x ${CODABASE}/sbin/volutil ] || exit 1

echon() {
    if [ "`echo -n`" ] ; then
        echo "$@"\c
    else
        echo -n "$@"
    fi
}

# See how we were called.
case "$1" in
  start)
	# start auth2 & update stuff: first the scm case
    	echon "Starting Coda Services: "
	if [ "`cat ${VICE}/hostname`" = "`cat ${VICE}/db/scm`" ]; then
 		${AUTH2} ${FLAGS} &
		echon " auth2"
		
	else 	# for non-scm machines.
		${AUTH2} ${FLAGS} -chk &
		echon " auth2(ro)"
	fi

	# update srv and updatemon run on all servers
	rpc2portmap &
        echon " rpc2portmap"

	updateclnt -h `cat /vice/db/scm`  -q coda_udpsrv &
	echon " updateclnt"

	updatesrv -p /vice/db &
	echon " updatesrv"
        echo '.'	# Done With Coda Serivces

	# now the server
	echon "Starting Coda:"
	if [  -f ${VICESRV}/STARTFROMBOOT -a ! -f ${VICESRV}/CRASH ]; then
	      	rm -f $VICESRV/pid
		startserver &
		echo " codasrv."
	else
		echo "`date`: srv not started." >> ${VICE}/srv/SrvErr
		echo "missing STARTFROMBOOT or CRASH." >> ${VICE}/srv/SrvErr
	fi
	;;
  stop)
	# Normal Coda FS shutdown:
	# if pid file doesn't exist, it isn't likely that srv is running.
	echon "Shutting down Coda: "
	if [ -f ${VICESRV}/pid ]; then
	      	volutil shutdown
		echon "$0: sleeping 30 secs to let srv shutdown..."
		sleep 30
		echo "..done"
	fi
	echo '.'
	;;
  *)
	echo "Usage: $0 {start|stop}"
	exit 1
esac

exit 0

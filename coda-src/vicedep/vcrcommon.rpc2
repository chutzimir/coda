%{ /* BLURB lgpl

                           Coda File System
                              Release 5

          Copyright (c) 1987-1999 Carnegie Mellon University
                  Additional copyrights listed below

This  code  is  distributed "AS IS" without warranty of any kind under
the  terms of the  GNU  Library General Public Licence  Version 2,  as
shown in the file LICENSE. The technical and financial contributors to
Coda are listed in the file CREDITS.

                        Additional copyrights
                           none currently

#*/

/*

                         IBM COPYRIGHT NOTICE

                          Copyright (C) 1986
             International Business Machines Corporation
                         All Rights Reserved

This  file  contains  some  code identical to or derived from the 1986
version of the Andrew File System ("AFS"), which is owned by  the  IBM
Corporation.   This  code is provided "AS IS" and IBM does not warrant
that it is free of infringement of  any  intellectual  rights  of  any
third  party.    IBM  disclaims  liability of any kind for any damages
whatsoever resulting directly or indirectly from use of this  software
or  of  any  derivative work.  Carnegie Mellon University has obtained
permission to  modify,  distribute and sublicense this code,  which is
based on Version 2  of  AFS  and  does  not  contain  the features and
enhancements that are part of  Version 3 of  AFS.  Version 3 of AFS is
commercially   available   and  supported  by   Transarc  Corporation,
Pittsburgh, PA.

*/
%}

/*
 * Include file common to both callback.rpc2, vice.rpc2 and res.rpc2
 */

%{
/* LIMITS !!! expect things to break when you change these !!! */

#define VSG_MEMBERS       8 /* changing this requires adjustments to many
			       fixed size structures in at least vice.rpc2 */
#define V_MAXVOLNAMELEN  32 /* (including '\0') changing this _might_ work. */
#define V_MAXPARTNAMELEN 32 /* (including '\0') changing this _might_ work. */
%}

%{
#ifndef _REALMID_T_
#define _REALMID_T_
typedef RPC2_Unsigned   RealmId; /* seen only by venus */
#endif

#ifndef _FID_T_
#define _FID_T_
%}

typedef RPC2_Unsigned   VolumeId;
typedef RPC2_Unsigned	VnodeId;
typedef RPC2_Unsigned	Unique_t;
typedef RPC2_Unsigned	FileVersion;

%{ 
#endif
%}


%{
#ifndef _VUID_T_
#define _VUID_T_
typedef unsigned int vuid_t;
typedef unsigned int vgid_t;
#endif
%}

%{
#ifndef _VICEFID_T_
#define _VICEFID_T_
%}

typedef RPC2_Struct 
{
	RPC2_Unsigned	Volume;
	RPC2_Unsigned	Vnode;
	RPC2_Unsigned	Unique;
}	ViceFid;

%{ 
#endif
%}

typedef RPC2_Struct
{
	RPC2_Unsigned	Host;
	RPC2_Unsigned	Uniquifier;
}	ViceStoreId;

typedef RPC2_Struct
{
	RPC2_Integer	Site0;
	RPC2_Integer	Site1;
	RPC2_Integer	Site2;
	RPC2_Integer	Site3;
	RPC2_Integer	Site4;
	RPC2_Integer	Site5;
	RPC2_Integer	Site6;
	RPC2_Integer	Site7;
}	ViceVersionArray;

typedef RPC2_Struct
{
	ViceVersionArray	Versions;
	ViceStoreId	StoreId;
	RPC2_Unsigned	Flags;
}	ViceVersionVector;

typedef RPC2_Unsigned	UserId;
typedef RPC2_Unsigned	Date_t;
typedef RPC2_Integer	Rights;

typedef	RPC2_Enum 
{ 
	Invalid = 0,
	File = 1, 
	Directory = 2, 
	SymbolicLink = 3 
} 	ViceDataType;

typedef RPC2_Enum
{
	NoCallBack = 0,
	CallBackSet = 1
} 	CallBackStatus;

typedef RPC2_Enum
{
	NoPermit = 0,
	PermitSet = 1
} 	PermitStatus;

typedef RPC2_Struct
{
	RPC2_Unsigned	InterfaceVersion;
	ViceDataType	VnodeType;
	RPC2_Integer	LinkCount;
	RPC2_Unsigned	Length;
	FileVersion	DataVersion;
	ViceVersionVector	VV;
	Date_t		Date;
	UserId		Author;
	UserId		Owner;
	CallBackStatus	CallBack;
	Rights		MyAccess;
	Rights		AnyAccess;
	RPC2_Unsigned	Mode;
	VnodeId		vparent;
	Unique_t	uparent;
}	ViceStatus;



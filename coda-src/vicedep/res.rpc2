%{ /* BLURB lgpl

                           Coda File System
                              Release 6

          Copyright (c) 1987-2003 Carnegie Mellon University
                  Additional copyrights listed below

This  code  is  distributed "AS IS" without warranty of any kind under
the  terms of the  GNU  Library General Public Licence  Version 2,  as
shown in the file LICENSE. The technical and financial contributors to
Coda are listed in the file CREDITS.

                        Additional copyrights
                           none currently

#*/
%}

/* res.rpc2 
 * Defines the resolution subsystem interface
 * 
 * Created Puneet Kumar, June 1990
 */
server prefix "RS";
client prefix "Res";

Subsystem "resolution";
#define RESOLUTIONSUBSYSID 5893

/* 
Return codes from the servers on resolution subsystem
*/
#define RES_FAILURE	-512
#define	RES_SUCCESS	0
#define RES_TIMEDOUT	-513
#define RES_NOTRUNT	-514
#define RES_BADOPLIST	-515

#include "vcrcommon.rpc2"

typedef RPC2_Struct
{
	RPC2_Integer	status;
	RPC2_Unsigned	Author;
	RPC2_Unsigned	Owner;
	RPC2_Unsigned	Date;
	RPC2_Unsigned 	Mode;
}	ResStatus;

typedef RPC2_Enum
{
	FetchStatus = 0,
	FetchSData = 1
}	ResFetchType;

typedef RPC2_Enum
{
	ResStoreStatus = 0,
	ResStoreData = 1
}	ResStoreType;

1: COP2		(IN ViceStoreId StoreId,
		 IN ViceVersionVector UpdateSet);

NewConnection	(IN RPC2_Integer SideEffectType,
		 IN RPC2_Integer SecurityLevel,
		 IN RPC2_Integer EncryptionType,
		 IN RPC2_Integer AuthType,
		 IN RPC2_CountedBS ClientIdent)
                 NEW_CONNECTION;

2: ForceFile   	(IN ViceFid Fid,
		 IN ResStoreType Request,
		 IN RPC2_Integer Length,
		 IN ViceVersionVector VV,
		 IN ResStatus Status,
		 IN OUT SE_Descriptor BD);

/* VV should be punted since it is available in ViceStatus */
3: LockAndFetch	(IN ViceFid Fid, 
		 IN ResFetchType Request, 
		 OUT ViceVersionVector VV,
		 OUT ResStatus rstatus, 
		 OUT RPC2_Integer logsize);

4: UnlockVol   	(IN VolumeId Vid);

5: MarkInc     	(IN ViceFid Fid);

6: FetchFile	(IN ViceFid Fid, 
		 IN RPC2_Unsigned PrimaryHost,
		 OUT ResStatus Status,
		 IN OUT SE_Descriptor BD);

7: ForceVV	(IN ViceFid Fid,
		 IN ViceVersionVector VV,
		 IN ViceStatus status);

8: DoForceDirOps (IN ViceFid Fid,
		  IN ViceStatus status,
		  IN RPC2_BoundedBS AccessList,
		  OUT RPC2_Integer rstatus,
		  IN OUT SE_Descriptor sed);

9: GetForceDirOps (IN ViceFid Fid,
		   OUT ViceStatus status, 
		   IN OUT RPC2_BoundedBS AccessList,
		   IN OUT SE_Descriptor sed);


/* New calls with logs in rvm */
/* reuse DirResPhase2 and DirResPhase3 */
14: FetchLogs       (IN ViceFid Fid,
		 OUT RPC2_Integer logsize,
		 OUT RPC2_Integer nentries,
		 IN OUT SE_Descriptor sed);
		 
15: ShipLogs    (IN ViceFid Fid,
		 IN RPC2_Integer size,
		 IN RPC2_Integer totalentries,
		 IN OUT ViceStatus vstatus,
		 IN OUT RPC2_BoundedBS piggyinc,
		 IN OUT SE_Descriptor sed);

16: HandleInc      (IN ViceFid Fid,
		 IN ViceStoreId logid,
		 OUT ViceStatus status,
		 IN RPC2_BoundedBS pbinc);

/* same as DirResPhase3 above */
17: InstallVV	(IN ViceFid Fid,
		 IN ViceVersionVector UpdateSet,
		 IN OUT SE_Descriptor sed);

18: FetchDirContents (IN ViceFid fid,
		  OUT RPC2_Integer length,
		  OUT ViceStatus statu,
		  IN OUT SE_Descriptor sed);

19: ClearIncon      (IN ViceFid Fid,
		 IN ViceVersionVector VV);

20: NewShipLogs    (IN ViceFid Fid,
		    IN RPC2_Integer size,
		    IN RPC2_Integer totalentries,
		    IN OUT ViceStatus vstatus,
		    IN OUT RPC2_BoundedBS piggyinc,
		    IN OUT SE_Descriptor sed,
		    OUT ViceFid HintFid);


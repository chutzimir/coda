#!/usr/bin/make -f
# Sample debian/rules that uses debhelper. 
# GNU copyright 1997 by Joey Hess.
#
# This version is for a hypothetical package that builds an
# architecture-dependant package, as well as an architecture-independent
# package.

# Uncomment this to turn on verbose mode. 
#export DH_VERBOSE=1

# This is the debhelper compatability version to use.
export DH_COMPAT=2

# This has to be exported to make some magic below work.
export DH_OPTIONS

DEB_BUILD_GNU_TYPE=$(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_HOST_GNU_TYPE=$(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)

# As we're not yet 'stable' we default to building unstripped binaries.
# This can be overridden by setting an empty DEB_BUILD_OPTIONS.
${DEB_BUILD_OPTIONS=debug,nostrip}
export DEB_BUILD_OPTIONS

ifneq (,$(findstring debug,$(DEB_BUILD_OPTIONS)))
CFLAGS = -g
endif

build: build-stamp
build-stamp:
	dh_testdir

	./configure --build=${DEB_BUILD_GNU_TYPE} --host=${DEB_HOST_GNU_TYPE} --prefix=/usr --mandir=\$${prefix}/share/man
	# Add here commands to compile the package.
	$(MAKE)

	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp 

	# Add here commands to clean up after the build process.
	-$(MAKE) distclean

	dh_clean

install: DH_OPTIONS=
install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	# Add here commands to install the package into debian/tmp.
	$(MAKE) client-install prefix=`pwd`/debian/tmp/usr
	$(MAKE) server-install prefix=`pwd`/debian/tmp/usr

	mkdir `pwd`/debian/tmp/coda
	touch `pwd`/debian/tmp/coda/NOT_REALLY_CODA

	# remove things we really don't need
	#rm -f `pwd`/debian/tmp/etc/init.d/update.init
	#rm -f `pwd`/debian/tmp/etc/init.d/venus.init
	#rm -f `pwd`/debian/tmp/usr/sbin/venus-setup

	dh_movefiles

	# both the client and the server package want this file. the client
	# adds a diversion to avoid the conflict.
	cp `pwd`/debian/coda-server/usr/sbin/codaconfedit \
	    `pwd`/debian/coda-client/usr/sbin/codaconfedit

# Build architecture-independent files here.
# Pass -i to all debhelper commands in this target to reduce clutter.
binary-indep: DH_OPTIONS=-i
binary-indep: build install
#	dh_testdir
#	dh_testroot
#	dh_installdebconf
#	dh_installdocs
#	dh_installexamples
#	dh_installmenu
#	dh_installinit
#	dh_installmanpages
#	dh_undocumented
#	dh_installchangelogs ChangeLog
#	dh_link
#	dh_compress
#	dh_fixperms
#	dh_installdeb
#	dh_gencontrol
#	dh_md5sums
#	dh_builddeb

# Build architecture-dependent files here.
# Pass -a to all debhelper commands in this target to reduce clutter.
binary-arch: DH_OPTIONS=-a
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installdebconf
	dh_installdocs
	dh_installinit --update-rcd-params="defaults 60"
#	dh_installman
	dh_installmodules
	dh_installchangelogs ChangeLog
	dh_strip
	dh_link
	dh_compress
	dh_fixperms
	dh_installdeb
#	dh_makeshlibs
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install

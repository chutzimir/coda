Index: sys/coda/cnode.h
===================================================================
RCS file: /home/ncvs/src/sys/coda/cnode.h,v
retrieving revision 1.12
diff -r1.12 cnode.h
104c104
<     ViceFid		 c_fid;		/* file handle */
---
>     CodaFid		 c_fid;		/* file handle */
200c200
< extern struct cnode *make_coda_node(ViceFid *fid, struct mount *vfsp, short type);
---
> extern struct cnode *make_coda_node(CodaFid *fid, struct mount *vfsp, short type);
Index: sys/coda/coda.h
===================================================================
RCS file: /home/ncvs/src/sys/coda/coda.h,v
retrieving revision 1.9
diff -r1.9 coda.h
165,181c165,167
< #ifndef	_FID_T_
< #define _FID_T_	1
< typedef u_long VolumeId;
< typedef u_long VnodeId;
< typedef u_long Unique_t;
< typedef u_long FileVersion;
< #endif 
< 
< #ifndef	_VICEFID_T_
< #define _VICEFID_T_	1
< typedef struct ViceFid {
<     VolumeId Volume;
<     VnodeId Vnode;
<     Unique_t Unique;
< } ViceFid;
< #endif	/* VICEFID */
< 
---
> typedef struct  {
> 	u_int32_t opaque[4];
> } CodaFid;
183,184c169
< #ifdef __linux__
< static __inline__ ino_t  coda_f2i(struct ViceFid *fid)
---
> static __inline__ ino_t  coda_f2i(CodaFid *fid)
186,191c171,173
< 	if ( ! fid ) 
< 		return 0; 
< 	if (fid->Vnode == 0xfffffffe || fid->Vnode == 0xffffffff)
< 		return ((fid->Volume << 20) | (fid->Unique & 0xfffff));
< 	else
< 		return (fid->Unique + (fid->Vnode<<10) + (fid->Volume<<20));
---
>     if ( ! fid ) 
> 	return 0; 
>     return (fid->opaque[3] ^ (fid->opaque[2]<<10) ^ (fid->opaque[1]<<20) ^ fid->opaque[0]);
194,199c176,182
< #else
< #define coda_f2i(fid)\
< 	((fid) ? ((fid)->Unique + ((fid)->Vnode<<10) + ((fid)->Volume<<20)) : 0)
< #endif
< 
< 
---
> static __inline__ char * coda_f2s(CodaFid *fid)
>  {
>      static char fid_str [35];
>      snprintf (fid_str, 35, "[%x.%x.%x.%x]", fid->opaque[0],
> 	       fid->opaque[1], fid->opaque[2], fid->opaque[3]);
>      return fid_str;
>  }
204,217c187,193
< 
< #ifndef _VUID_T_
< #define _VUID_T_
< typedef u_int32_t vuid_t;
< typedef u_int32_t vgid_t;
< #endif /*_VUID_T_ */
< 
< #ifndef _CODACRED_T_
< #define _CODACRED_T_
< struct coda_cred {
<     vuid_t cr_uid, cr_euid, cr_suid, cr_fsuid; /* Real, efftve, set, fs uid*/
<     vgid_t cr_groupid,     cr_egid, cr_sgid, cr_fsgid; /* same for groups */
< };
< #endif 
---
> static __inline__ int coda_fid_eq (CodaFid *fid1, CodaFid *fid2)
> {
>   return (fid1->opaque[0] == fid2->opaque[0] &&
> 	  fid1->opaque[1] == fid2->opaque[1] &&
> 	  fid1->opaque[2] == fid2->opaque[2] &&
> 	  fid1->opaque[3] == fid2->opaque[3]);
> }
230,231c206,207
< 	vuid_t		va_uid;		/* owner user id */
< 	vgid_t		va_gid;		/* owner group id */
---
> 	uid_t		va_uid;		/* owner user id */
> 	gid_t		va_gid;		/* owner group id */
246a223,231
> /* structure used by CODA_STATFS for getting cache information from venus */
> struct coda_statfs {
>     int32_t f_blocks;
>     int32_t f_bfree;
>     int32_t f_bavail;
>     int32_t f_files;
>     int32_t f_ffree;
> };
> 
252c237
< #define CODA_SYNC	3
---
> #define CODA_OPEN_BY_FD	3
282c267,268
< #define CODA_NCALLS 34
---
> #define CODA_STATFS	 34
> #define CODA_NCALLS 35
296d281
< #endif
298a284,285
> #endif  /* realms/cells */
> #define CODA_KERNEL_VERSION 3 
304,309c291,295
<     unsigned long opcode;
<     unsigned long unique;	    /* Keep multiple outstanding msgs distinct */
<     u_short pid;		    /* Common to all */
<     u_short pgid;		    /* Common to all */
<     u_short sid;                    /* Common to all */
<     struct coda_cred cred;	    /* Common to all */
---
>     u_int32_t opcode;
>     u_int32_t unique;	    /* Keep multiple outstanding msgs distinct */
>     pid_t pid;		    /* Common to all */
>     pid_t pgid;		    /* Common to all */
>     uid_t uid;		    /* Common to all */
322c308
<     ViceFid VFid;
---
>     CodaFid Fid;
335c321
<     ViceFid	VFid;
---
>     CodaFid	Fid;
349c335
<     ViceFid	VFid;
---
>     CodaFid	Fid;
360c346
<     ViceFid VFid;
---
>     CodaFid Fid;
377c363
<     ViceFid VFid;
---
>     CodaFid Fid;
389c375
<     ViceFid VFid;
---
>     CodaFid Fid;
400c386
<     ViceFid	VFid;
---
>     CodaFid	Fid;
416c402
<     ViceFid	VFid;
---
>     CodaFid	Fid;
423c409
<     ViceFid VFid;
---
>     CodaFid Fid;
431c417
<     ViceFid VFid;
---
>     CodaFid Fid;
440c426
<     ViceFid VFid;
---
>     CodaFid Fid;
448c434
<     ViceFid	VFid;
---
>     CodaFid	Fid;
459,460c445,446
<     ViceFid sourceFid;          /* cnode to link *to* */
<     ViceFid destFid;            /* Directory in which to place link */
---
>     CodaFid sourceFid;          /* cnode to link *to* */
>     CodaFid destFid;            /* Directory in which to place link */
472c458
<     ViceFid	sourceFid;
---
>     CodaFid	sourceFid;
474c460
<     ViceFid destFid;
---
>     CodaFid destFid;
485c471
<     ViceFid	VFid;
---
>     CodaFid	Fid;
492c478
<     ViceFid VFid;
---
>     CodaFid Fid;
500c486
<     ViceFid	VFid;
---
>     CodaFid	Fid;
511c497
<     ViceFid	VFid;
---
>     CodaFid	Fid;
525c511
<     ViceFid	VFid;          /* Directory to put symlink in */
---
>     CodaFid	Fid;          /* Directory to put symlink in */
538c524
<     ViceFid VFid;
---
>     CodaFid Fid;
551c537
<     ViceFid VFid;
---
>     CodaFid Fid;
561c547
<     ViceFid VFid;
---
>     CodaFid Fid;
567c553
<     ViceFid VFid;
---
>     CodaFid Fid;
572c558
<     ViceFid VFid;
---
>     CodaFid Fid;
585c571
<     struct coda_cred cred;
---
>     uid_t uid;
592c578
<     ViceFid CodaFid;
---
>     CodaFid Fid;
599c585
<     ViceFid CodaFid;
---
>     CodaFid Fid;
606,607c592
<     struct coda_cred cred;
<     ViceFid VFid;
---
>     CodaFid Fid;
614c599
<     ViceFid CodaFid;
---
>     CodaFid Fid;
617,625c602,607
< /* coda_rdwr: */
< struct coda_rdwr_in {
<     struct coda_in_hdr ih;
<     ViceFid	VFid;
<     int	rwflag;
<     int	count;
<     int	offset;
<     int	ioflag;
<     caddr_t	data;		/* Place holder for data. */	
---
> /* coda_replace: */
> /* CODA_REPLACE is a venus->kernel call */	
> struct coda_replace_out { /* coda_replace is a venus->kernel call */
>      struct coda_out_hdr oh;
>     CodaFid NewFid;
>     CodaFid OldFid;
628,632c610,614
< struct coda_rdwr_out {
<     struct coda_out_hdr oh;
<     int	rwflag;
<     int	count;
<     caddr_t	data;	/* Place holder for data. */
---
> /* coda_open_by_fd: */
> struct coda_open_by_fd_in {
>     struct coda_in_hdr ih;
>     CodaFid Fid;
>     int	flags;
635,638c617
< 
< /* coda_replace: */
< /* CODA_REPLACE is a venus->kernel call */	
< struct coda_replace_out { /* coda_replace is a venus->kernel call */
---
> struct coda_open_by_fd_out {
640,641c619,620
<     ViceFid NewFid;
<     ViceFid OldFid;
---
>     int fd;
>     struct file *fh;
647c626
<     ViceFid	VFid;
---
>     CodaFid	Fid;
653c632,642
< 	int path;
---
>     int path;
> };
> 
> /* coda_statfs: NO_IN */
> struct coda_statfs_in {
>     struct coda_in_hdr ih;
> };
> 
> struct coda_statfs_out {
>     struct coda_out_hdr oh;
>     struct coda_statfs stat;
682d670
<     struct coda_inactive_in coda_inactive;
684,685c672,674
<     struct coda_rdwr_in coda_rdwr;
< 	struct coda_open_by_path_in coda_open_by_path;
---
>     struct coda_open_by_fd_in coda_open_by_fd;
>     struct coda_open_by_path_in coda_open_by_path;
>     struct coda_statfs_in coda_statfs;
705d693
<     struct coda_rdwr_out coda_rdwr;
707c695,697
< 	struct coda_open_by_path_out coda_open_by_path;
---
>     struct coda_open_by_fd_out coda_open_by_fd;
>     struct coda_open_by_path_out coda_open_by_path;
>     struct coda_statfs_out coda_statfs;
750,752c740
< #define	CTL_VOL			-1
< #define	CTL_VNO			-1
< #define	CTL_UNI			-1
---
> #define	CTL_FID			{ { -1, -1, -1, -1 } }
755a744,756
> #define	IS_CTL_FID(fidp)	((fidp)->opaque[0] == -1 &&\
> 				 (fidp)->opaque[1] == -1 &&\
> 				 (fidp)->opaque[2] == -1 &&\
> 				 (fidp)->opaque[3] == -1)
> 
> /* Data passed to mount */
> 
> #define CODA_MOUNT_VERSION 1
> 
> struct coda_mount_data {
> 	int		version;
> 	int		fd;       /* Opened device */
> };
757,759d757
< #define	IS_CTL_FID(fidp)	((fidp)->Volume == CTL_VOL &&\
< 				 (fidp)->Vnode == CTL_VNO &&\
< 				 (fidp)->Unique == CTL_UNI)
Index: sys/coda/coda_namecache.c
===================================================================
RCS file: /home/ncvs/src/sys/coda/coda_namecache.c,v
retrieving revision 1.18
diff -r1.18 coda_namecache.c
358,361c358,359
< 		    myprintf(("coda_nc_remove %s from parent %lx.%lx.%lx\n",
< 			   cncp->name, (cncp->dcp)->c_fid.Volume,
< 			   (cncp->dcp)->c_fid.Vnode, (cncp->dcp)->c_fid.Unique));)
< 
---
> 		    myprintf(("coda_nc_remove %s from parent %s\n",
> 			      cncp->name, coda_f2s(&cncp->dcp->c_fid))); )	
389c387
< 	ViceFid *fid;
---
> 	CodaFid *fid;
401c399
< 		return;
---
> 		return;	
404,405c402
< 		myprintf(("ZapParent: fid 0x%lx, 0x%lx, 0x%lx \n",
< 			fid->Volume, fid->Vnode, fid->Unique)); )
---
> 		      myprintf(("ZapParent: fid %s\n", coda_f2s(fid))); )
420,422c417
< 			if ((cncp->dcp->c_fid.Volume == fid->Volume) &&
< 			    (cncp->dcp->c_fid.Vnode == fid->Vnode)   &&
< 			    (cncp->dcp->c_fid.Unique == fid->Unique)) {
---
> 			if (coda_fid_eq(&(cncp->dcp->c_fid), fid)) {
436c431
< 	ViceFid *fid;
---
> 	CodaFid *fid;
449,450c444
< 		myprintf(("Zapfid: fid 0x%lx, 0x%lx, 0x%lx \n",
< 			fid->Volume, fid->Vnode, fid->Unique)); )
---
> 		      myprintf(("Zapfid: fid %s\n", coda_f2s(fid))); )
459,463c453,455
< 			if ((cncp->cp->c_fid.Volume == fid->Volume) &&
< 			    (cncp->cp->c_fid.Vnode == fid->Vnode)   &&
< 			    (cncp->cp->c_fid.Unique == fid->Unique)) {
< 			        coda_nc_hash[i].length--;     /* Used for tuning */
< 				coda_nc_remove(cncp, dcstat); 
---
> 			if (coda_fid_eq(&cncp->cp->c_fid, fid)) {
> 			    coda_nc_hash[i].length--;     /* Used for tuning */
> 			    coda_nc_remove(cncp, dcstat); 
474c466
< 	ViceFid *fid;
---
> 	CodaFid *fid;
481a474
> 
485,487c478,482
< 	CODA_NC_DEBUG(CODA_NC_ZAPVNODE, 
< 		myprintf(("Zapvnode: fid 0x%lx, 0x%lx, 0x%lx cred %p\n",
< 			  fid->Volume, fid->Vnode, fid->Unique, cred)); )
---
> 	CODA_NC_DEBUG(CODA_NC_ZAPVNODE,
> 		      myprintf(("Zapvnode: fid %s cred %p\n",
> 				coda_f2s(fid), cred)); )
> 
>  
537c532
< 	vuid_t	uid;
---
> 	uid_t	uid;
620c615,616
< 					 myprintf(("coda_nc_flush: (%lx.%lx.%lx) busy\n", cncp->cp->c_fid.Volume, cncp->cp->c_fid.Vnode, cncp->cp->c_fid.Unique)); )
---
> 			myprintf(("coda_nc_flush: %s busy\n",
> 				 coda_f2s(&cncp->cp->c_fid))); )
Index: sys/coda/coda_namecache.h
===================================================================
RCS file: /home/ncvs/src/sys/coda/coda_namecache.h,v
retrieving revision 1.8
diff -r1.8 coda_namecache.h
143,145c143,145
< extern void coda_nc_zapParentfid(ViceFid *, enum dc_status);
< extern void coda_nc_zapfid(ViceFid *, enum dc_status);
< extern void coda_nc_zapvnode(ViceFid *, struct ucred *, enum dc_status);
---
> extern void coda_nc_zapParentfid(CodaFid *, enum dc_status);
> extern void coda_nc_zapfid(CodaFid *, enum dc_status);
> extern void coda_nc_zapvnode(CodaFid *, struct ucred *, enum dc_status);
147c147
< extern void coda_nc_purge_user(vuid_t, enum dc_status);
---
> extern void coda_nc_purge_user(uid_t, enum dc_status);
Index: sys/coda/coda_subr.c
===================================================================
RCS file: /home/ncvs/src/sys/coda/coda_subr.c,v
retrieving revision 1.22
diff -r1.22 coda_subr.c
78c78
< #define coda_hash(fid) (((fid)->Volume + (fid)->Vnode) & (CODA_CACHESIZE-1))
---
> #define coda_hash(fid) (coda_f2i(fid) & (CODA_CACHESIZE-1))
80c80
< #define ODD(vnode)        ((vnode) & 0x1)
---
> #define IS_DIR(cnode)        (cnode.opaque[2] & 0x1)
165c165
<      ViceFid *fid;
---
>      CodaFid *fid;
171,173c171
< 	if ((cp->c_fid.Vnode == fid->Vnode) &&
< 	    (cp->c_fid.Volume == fid->Volume) &&
< 	    (cp->c_fid.Unique == fid->Unique) &&
---
> 	    if (coda_fid_eq(&(cp->c_fid), fid) &&
222,227c220,223
< 					 myprintf(("Live cnode fid %lx.%lx.%lx flags %d count %d\n",
< 						   (cp->c_fid).Volume,
< 						   (cp->c_fid).Vnode,
< 						   (cp->c_fid).Unique, 
< 						   cp->c_flags,
< 						   vrefcnt(CTOV(cp)))); );
---
> 					  myprintf(("Live cnode fid %s flags %d count %d\n",
> 						    coda_f2s(&cp->c_fid),
> 						    cp->c_flags,
> 						    vrefcnt(CTOV(cp)))); );
252c248
< 	    if (!ODD(cp->c_fid.Vnode)) /* only files can be executed */
---
> 	    if (!IS_DIR(cp->c_fid)) /* only files can be executed */
272,274c268,269
< 	    myprintf(("Live cnode fid %lx.%lx.%lx count %d\n",
< 		      (cp->c_fid).Volume,(cp->c_fid).Vnode,
< 		      (cp->c_fid).Unique, vrefcnt(CTOV(cp))));
---
> 	    myprintf(("Live cnode fid %s count %d\n",
> 		      coda_f2s(&cp->c_fid), CTOV(cp)->v_usecount));
377c372
<  * CODA_REPLACE -- replace one ViceFid with another throughout the name cache 
---
>  * CODA_REPLACE -- replace one CodaFid with another throughout the name cache 
400c395
< 	  coda_nc_purge_user(out->coda_purgeuser.cred.cr_uid, IS_DOWNCALL);
---
> 	  coda_nc_purge_user(out->coda_purgeuser.uid, IS_DOWNCALL);
411c406
< 	  cp = coda_find(&out->coda_zapfile.CodaFid);
---
> 	  cp = coda_find(&out->coda_zapfile.Fid);
419,423c414,417
< 	      CODADEBUG(CODA_ZAPFILE, myprintf((
< "zapfile: fid = (%lx.%lx.%lx), refcnt = %d, error = %d\n",
< 		  cp->c_fid.Volume, cp->c_fid.Vnode, cp->c_fid.Unique,
< 		  vrefcnt(CTOV(cp)) - 1, error)););
< 	      if (vrefcnt(CTOV(cp)) == 1) {
---
> 	      CODADEBUG(CODA_ZAPFILE, 
> 			myprintf(("zapfile: fid = %s, refcnt = %d, error = %d\n",
> 				  coda_f2s(&cp->c_fid), CTOV(cp)->v_usecount - 1, error)););
>     if (vrefcnt(CTOV(cp)) == 1) {
438c432
< 	  cp = coda_find(&out->coda_zapdir.CodaFid);
---
> 	  cp = coda_find(&out->coda_zapdir.Fid);
443c437
< 	      coda_nc_zapParentfid(&out->coda_zapdir.CodaFid, IS_DOWNCALL);
---
> 	      coda_nc_zapParentfid(&out->coda_zapdir.Fid, IS_DOWNCALL);
446,448c440,441
< "zapdir: fid = (%lx.%lx.%lx), refcnt = %d\n",
< 		  cp->c_fid.Volume, cp->c_fid.Vnode, cp->c_fid.Unique,
< 		  vrefcnt(CTOV(cp)) - 1)););
---
> 		  "zapdir: fid = %s, refcnt = %d\n",
> 		  coda_f2s(&cp->c_fid), CTOV(cp)->v_usecount - 1)););
465c458
< 	  cp = coda_find(&out->coda_purgefid.CodaFid);
---
> 	  cp = coda_find(&out->coda_purgefid.Fid);
468,470c461,462
< 	      if (ODD(out->coda_purgefid.CodaFid.Vnode)) { /* Vnode is a directory */
< 		  coda_nc_zapParentfid(&out->coda_purgefid.CodaFid,
< 				     IS_DOWNCALL);     
---
> 	      if (IS_DIR(out->coda_purgefid.Fid)) { /* Vnode is a directory */
> 		      coda_nc_zapParentfid(&out->coda_purgefid.Fid,IS_DOWNCALL);     
473c465
< 	      coda_nc_zapfid(&out->coda_purgefid.CodaFid, IS_DOWNCALL);
---
> 	      coda_nc_zapfid(&out->coda_purgefid.Fid, IS_DOWNCALL);
475c467
< 	      if (!(ODD(out->coda_purgefid.CodaFid.Vnode)) 
---
> 	      if (!(IS_DIR(out->coda_purgefid.Fid)) 
480,483c472,474
< 	      CODADEBUG(CODA_PURGEFID, myprintf(("purgefid: fid = (%lx.%lx.%lx), refcnt = %d, error = %d\n",
<                                             cp->c_fid.Volume, cp->c_fid.Vnode,
<                                             cp->c_fid.Unique, 
< 					    vrefcnt(CTOV(cp)) - 1, error)););
---
> 	      CODADEBUG(CODA_PURGEFID, myprintf((
> 			 "purgefid: fid = %s, refcnt = %d, error = %d\n",
> 			 coda_f2s(&cp->c_fid), CTOV(cp)->v_usecount - 1, error)););
506,512c497,500
< 	      CODADEBUG(CODA_REPLACE, myprintf(("replace: oldfid = (%lx.%lx.%lx), newfid = (%lx.%lx.%lx), cp = %p\n",
< 					   out->coda_replace.OldFid.Volume,
< 					   out->coda_replace.OldFid.Vnode,
< 					   out->coda_replace.OldFid.Unique,
< 					   cp->c_fid.Volume, cp->c_fid.Vnode, 
< 					   cp->c_fid.Unique, cp));)
< 	      vrele(CTOV(cp));
---
> 	      CODADEBUG(CODA_REPLACE, myprintf((
> 			"replace: oldfid = %s, newfid = %s, cp = %p\n",
> 			coda_f2s(&out->coda_replace.OldFid),
> 			coda_f2s(&cp->c_fid), cp));)	      vrele(CTOV(cp));
Index: sys/coda/coda_subr.h
===================================================================
RCS file: /home/ncvs/src/sys/coda/coda_subr.h,v
retrieving revision 1.7
diff -r1.7 coda_subr.h
36c36
< struct cnode *coda_find(ViceFid *fid);
---
> struct cnode *coda_find(CodaFid *fid);
Index: sys/coda/coda_venus.c
===================================================================
RCS file: /home/ncvs/src/sys/coda/coda_venus.c,v
retrieving revision 1.16
diff -r1.16 coda_venus.c
96,111c96,104
< #define INIT_IN(in, op, ident, p) \
< 	  (in)->opcode = (op); \
< 	  sx_slock(&proctree_lock); \
< 	  (in)->pid = p ? p->p_pid : -1; \
<           (in)->pgid = p ? p->p_pgid : -1; \
<           (in)->sid = (p && p->p_session && p->p_session->s_leader) ? (p->p_session->s_leader->p_pid) : -1; \
< 	  sx_sunlock(&proctree_lock); \
<           if (ident != NOCRED) {                              \
< 	      (in)->cred.cr_uid = ident->cr_uid;              \
< 	      (in)->cred.cr_groupid = ident->cr_gid;          \
<           } else {                                            \
< 	      bzero(&((in)->cred),sizeof(struct coda_cred));  \
< 	      (in)->cred.cr_uid = -1;                         \
< 	      (in)->cred.cr_groupid = -1;                     \
<           }                                                   \
< 
---
> #define INIT_IN(in, op, ident, p)                       \
> 	  (in)->opcode = (op);                          \
> 	  (in)->pid = p ? p->p_pid : -1;                \
>           (in)->pgid = p ? p->p_pgid : -1;              \
>           if (ident != NOCRED) {                        \
> 	      (in)->uid = ident->cr_uid;              	\
>           } else {                                      \
> 	      (in)->uid = -1;                           \
>           }     
171c164
< /*out*/	ViceFid *VFid)
---
> /*out*/	CodaFid *VFid)
181c174
< 	*VFid = outp->VFid;
---
> 	*VFid = outp->Fid;
188c181
< venus_open(void *mdp, ViceFid *fid, int flag,
---
> venus_open(void *mdp, CodaFid *fid, int flag,
198c191
<     inp->VFid = *fid;
---
>     inp->Fid = *fid;
214c207
< venus_close(void *mdp, ViceFid *fid, int flag,
---
> venus_close(void *mdp, CodaFid *fid, int flag,
222c215
<     inp->VFid = *fid;
---
>     inp->Fid = *fid;
251c244
< venus_ioctl(void *mdp, ViceFid *fid,
---
> venus_ioctl(void *mdp, CodaFid *fid,
263c256
<     inp->VFid = *fid;
---
>     inp->Fid = *fid;
302c295
< venus_getattr(void *mdp, ViceFid *fid,
---
> venus_getattr(void *mdp, CodaFid *fid,
311c304
<     inp->VFid = *fid;
---
>     inp->Fid = *fid;
323c316
< venus_setattr(void *mdp, ViceFid *fid, struct vattr *vap,
---
> venus_setattr(void *mdp, CodaFid *fid, struct vattr *vap,
331c324
<     inp->VFid = *fid;
---
>     inp->Fid = *fid;
341c334
< venus_access(void *mdp, ViceFid *fid, int mode,
---
> venus_access(void *mdp, CodaFid *fid, int mode,
349c342
<     inp->VFid = *fid;
---
>     inp->Fid = *fid;
363c356
< venus_readlink(void *mdp, ViceFid *fid,
---
> venus_readlink(void *mdp, CodaFid *fid,
373c366
<     inp->VFid = *fid;
---
>     inp->Fid = *fid;
388c381
< venus_fsync(void *mdp, ViceFid *fid,
---
> venus_fsync(void *mdp, CodaFid *fid,
396c389
<     inp->VFid = *fid;
---
>     inp->Fid = *fid;
405c398
< venus_lookup(void *mdp, ViceFid *fid,
---
> venus_lookup(void *mdp, CodaFid *fid,
408c401
< /*out*/	ViceFid *VFid, int *vtype)
---
> /*out*/	CodaFid *VFid, int *vtype)
416c409
<     inp->VFid = *fid;
---
>     inp->Fid = *fid;
433c426
< 	*VFid = outp->VFid;
---
> 	*VFid = outp->Fid;
442c435
< venus_create(void *mdp, ViceFid *fid,
---
> venus_create(void *mdp, CodaFid *fid,
445c438
< /*out*/	ViceFid *VFid, struct vattr *attr)
---
> /*out*/	CodaFid *VFid, struct vattr *attr)
453c446
<     inp->VFid = *fid;
---
>     inp->Fid = *fid;
463c456
< 	*VFid = outp->VFid;
---
> 	*VFid = outp->Fid;
472c465
< venus_remove(void *mdp, ViceFid *fid,
---
> venus_remove(void *mdp, CodaFid *fid,
482c475
<     inp->VFid = *fid;
---
>     inp->Fid = *fid;
494c487
< venus_link(void *mdp, ViceFid *fid, ViceFid *tfid,
---
> venus_link(void *mdp, CodaFid *fid, CodaFid *tfid,
517c510
< venus_rename(void *mdp, ViceFid *fid, ViceFid *tfid,
---
> venus_rename(void *mdp, CodaFid *fid, CodaFid *tfid,
543c536
< venus_mkdir(void *mdp, ViceFid *fid,
---
> venus_mkdir(void *mdp, CodaFid *fid,
546c539
< /*out*/	ViceFid *VFid, struct vattr *ova)
---
> /*out*/	CodaFid *VFid, struct vattr *ova)
554c547
<     inp->VFid = *fid;
---
>     inp->Fid = *fid;
562c555
< 	*VFid = outp->VFid;
---
> 	*VFid = outp->Fid;
571c564
< venus_rmdir(void *mdp, ViceFid *fid,
---
> venus_rmdir(void *mdp, CodaFid *fid,
581c574
<     inp->VFid = *fid;
---
>     inp->Fid = *fid;
593c586
< venus_symlink(void *mdp, ViceFid *fid,
---
> venus_symlink(void *mdp, CodaFid *fid,
603c596
<     inp->VFid = *fid;
---
>     inp->Fid = *fid;
619c612
< venus_readdir(void *mdp, ViceFid *fid,
---
> venus_readdir(void *mdp, CodaFid *fid,
630c623
<     inp->VFid = *fid;
---
>     inp->Fid = *fid;
646c639
< venus_fhtovp(void *mdp, ViceFid *fid,
---
> venus_fhtovp(void *mdp, CodaFid *fid,
648c641
< /*out*/	ViceFid *VFid, int *vtype)
---
> /*out*/	CodaFid *VFid, int *vtype)
655c648
<     inp->VFid = *fid;
---
>     inp->Fid = *fid;
659c652
< 	*VFid = outp->VFid;
---
> 	*VFid = outp->Fid;
Index: sys/coda/coda_venus.h
===================================================================
RCS file: /home/ncvs/src/sys/coda/coda_venus.h,v
retrieving revision 1.4
diff -r1.4 coda_venus.h
37c37
< /*out*/	ViceFid *VFid);
---
> /*out*/	CodaFid *VFid);
40c40
< venus_open(void *mdp, ViceFid *fid, int flag,
---
> venus_open(void *mdp, CodaFid *fid, int flag,
45c45
< venus_close(void *mdp, ViceFid *fid, int flag,
---
> venus_close(void *mdp, CodaFid *fid, int flag,
55c55
< venus_ioctl(void *mdp, ViceFid *fid,
---
> venus_ioctl(void *mdp, CodaFid *fid,
60c60
< venus_getattr(void *mdp, ViceFid *fid,
---
> venus_getattr(void *mdp, CodaFid *fid,
65c65
< venus_setattr(void *mdp, ViceFid *fid, struct vattr *vap,
---
> venus_setattr(void *mdp, CodaFid *fid, struct vattr *vap,
69c69
< venus_access(void *mdp, ViceFid *fid, int mode,
---
> venus_access(void *mdp, CodaFid *fid, int mode,
73c73
< venus_readlink(void *mdp, ViceFid *fid,
---
> venus_readlink(void *mdp, CodaFid *fid,
78c78
< venus_fsync(void *mdp, ViceFid *fid,
---
> venus_fsync(void *mdp, CodaFid *fid,
82c82
< venus_lookup(void *mdp, ViceFid *fid,
---
> venus_lookup(void *mdp, CodaFid *fid,
85c85
< /*out*/	ViceFid *VFid, int *vtype);
---
> /*out*/	CodaFid *VFid, int *vtype);
88c88
< venus_create(void *mdp, ViceFid *fid,
---
> venus_create(void *mdp, CodaFid *fid,
91c91
< /*out*/	ViceFid *VFid, struct vattr *attr);
---
> /*out*/	CodaFid *VFid, struct vattr *attr);
94c94
< venus_remove(void *mdp, ViceFid *fid,
---
> venus_remove(void *mdp, CodaFid *fid,
99c99
< venus_link(void *mdp, ViceFid *fid, ViceFid *tfid,
---
> venus_link(void *mdp, CodaFid *fid, CodaFid *tfid,
104c104
< venus_rename(void *mdp, ViceFid *fid, ViceFid *tfid,
---
> venus_rename(void *mdp, CodaFid *fid, CodaFid *tfid,
109c109
< venus_mkdir(void *mdp, ViceFid *fid,
---
> venus_mkdir(void *mdp, CodaFid *fid,
112c112
< /*out*/	ViceFid *VFid, struct vattr *ova);
---
> /*out*/	CodaFid *VFid, struct vattr *ova);
115c115
< venus_rmdir(void *mdp, ViceFid *fid,
---
> venus_rmdir(void *mdp, CodaFid *fid,
120c120
< venus_symlink(void *mdp, ViceFid *fid,
---
> venus_symlink(void *mdp, CodaFid *fid,
125c125
< venus_readdir(void *mdp, ViceFid *fid,
---
> venus_readdir(void *mdp, CodaFid *fid,
131c131
< venus_fhtovp(void *mdp, ViceFid *fid,
---
> venus_fhtovp(void *mdp, CodaFid *fid,
133c133
< /*out*/	ViceFid *VFid, int *vtype);
---
> /*out*/	CodaFid *VFid, int *vtype);
Index: sys/coda/coda_vfsops.c
===================================================================
RCS file: /home/ncvs/src/sys/coda/coda_vfsops.c,v
retrieving revision 1.43
diff -r1.43 coda_vfsops.c
121,122c121,122
<     ViceFid rootfid;
<     ViceFid ctlfid;
---
>     CodaFid rootfid;
>     CodaFid ctlfid = CTL_FID;
191,193c191,194
<     rootfid.Volume = 0;
<     rootfid.Vnode = 0;
<     rootfid.Unique = 0;
---
>     rootfid.opaque[0] = 0;
>     rootfid.opaque[1] = 0;
>     rootfid.opaque[2] = 0; 
>     rootfid.opaque[3] = 0;
198,200d198
<     ctlfid.Volume = CTL_VOL;
<     ctlfid.Vnode = CTL_VNO;
<     ctlfid.Unique = CTL_UNI;
259d256
< 
298c295
<     ViceFid VFid;
---
>     CodaFid VFid;
316,319c313,316
< 	if ((VTOC(mi->mi_rootvp)->c_fid.Volume != 0) ||
< 	    (VTOC(mi->mi_rootvp)->c_fid.Vnode != 0) ||
< 	    (VTOC(mi->mi_rootvp)->c_fid.Unique != 0) ||
< 	    mi->mi_started == 0)
---
> 	if ((VTOC(mi->mi_rootvp)->c_fid.opaque[0] != 0) ||
> 	    (VTOC(mi->mi_rootvp)->c_fid.opaque[1] != 0) ||
> 	    (VTOC(mi->mi_rootvp)->c_fid.opaque[2] != 0) ||
> 	    (VTOC(mi->mi_rootvp)->c_fid.opaque[3] != 0))
473c470
<     ViceFid VFid;
---
>     CodaFid VFid;
494,496c491,492
< 		 myprintf(("vget: vol %lx vno %lx uni %lx type %d result %d\n",
< 			VFid.Volume, VFid.Vnode, VFid.Unique, vtype, error)); )
< 	    
---
> 		 myprintf(("vget: %s type %d result %d\n",
> 			coda_f2s(&VFid), vtype, error)); )	    
518c514
<     cfid.cfid_len = (short)sizeof(ViceFid);
---
>     cfid.cfid_len = (short)sizeof(CodaFid);
Index: sys/coda/coda_vfsops.h
===================================================================
RCS file: /home/ncvs/src/sys/coda/coda_vfsops.h,v
retrieving revision 1.6
diff -r1.6 coda_vfsops.h
43c43
<     ViceFid	cfid_fid;
---
>     CodaFid	cfid_fid;
Index: sys/coda/coda_vnops.c
===================================================================
RCS file: /home/ncvs/src/sys/coda/coda_vnops.c,v
retrieving revision 1.47
diff -r1.47 coda_vnops.c
494,497c494,495
<     CODADEBUG(CODA_RDWR, myprintf(("indirect rdwr: fid = (%lx.%lx.%lx), refcnt = %d\n",
< 			      cp->c_fid.Volume, cp->c_fid.Vnode, 
< 			      cp->c_fid.Unique, vrefcnt(CTOV(cp)))); )
< 
---
>     CODADEBUG(CODA_RDWR, myprintf(("indirect rdwr: fid = %s, refcnt = %d\n",
> 			     coda_f2s(&cp->c_fid), CTOV(cp)->v_usecount)); )
644,647c642,643
< 	CODADEBUG(CODA_GETATTR, { myprintf(("attr cache hit: (%lx.%lx.%lx)\n",
< 				       cp->c_fid.Volume,
< 				       cp->c_fid.Vnode,
< 				       cp->c_fid.Unique));});
---
> 	CODADEBUG(CODA_GETATTR, { myprintf(("attr cache hit: %s\n",
> 					coda_f2s(&cp->c_fid)));});
659,663c655,656
< 	CODADEBUG(CODA_GETATTR, myprintf(("getattr miss (%lx.%lx.%lx): result %d\n",
< 				     cp->c_fid.Volume,
< 				     cp->c_fid.Vnode,
< 				     cp->c_fid.Unique,
< 				     error)); )
---
> 	CODADEBUG(CODA_GETATTR, myprintf(("getattr miss %s: result %d\n",
> 				     coda_f2s(&cp->c_fid), error)); )	       
910,913c903,905
<     CODADEBUG(CODA_INACTIVE, myprintf(("in inactive, %lx.%lx.%lx. vfsp %p\n",
< 				  cp->c_fid.Volume, cp->c_fid.Vnode, 
< 				  cp->c_fid.Unique, vp->v_mount));)
< 
---
>     CODADEBUG(CODA_INACTIVE, myprintf(("in inactive, %s, vfsp %p\n",
> 				  coda_f2s(&cp->c_fid), vp->v_mount));)
>  
985c977
<     ViceFid VFid;
---
>     CodaFid VFid;
991,993c983,984
<     CODADEBUG(CODA_LOOKUP, myprintf(("lookup: %s in %lx.%lx.%lx\n",
< 				   nm, dcp->c_fid.Volume,
< 				   dcp->c_fid.Vnode, dcp->c_fid.Unique)););
---
>     CODADEBUG(CODA_LOOKUP, myprintf(("lookup: %s in %s\n",
> 				   nm, coda_f2s(&dcp->c_fid))););
1005,1007c996,998
< 	CODADEBUG(CODA_LOOKUP, myprintf(("name too long: lookup, %lx.%lx.%lx(%s)\n",
< 				    dcp->c_fid.Volume, dcp->c_fid.Vnode,
< 				    dcp->c_fid.Unique, nm)););
---
> 
> 	CODADEBUG(CODA_LOOKUP, myprintf(("name too long: lookup, %s (%s)\n",
> 					 coda_f2s(&dcp->c_fid), nm)););
1027,1028c1018,1020
< 	    CODADEBUG(CODA_LOOKUP, myprintf(("lookup error on %lx.%lx.%lx(%s)%d\n",
< 					dcp->c_fid.Volume, dcp->c_fid.Vnode, dcp->c_fid.Unique, nm, error));)
---
> 
> 	    CODADEBUG(CODA_LOOKUP, myprintf(("lookup error on %s (%s)%d\n",
> 					     coda_f2s(&dcp->c_fid), nm, error));)
1033,1036c1025,1026
< 		     myprintf(("lookup: vol %lx vno %lx uni %lx type %o result %d\n",
< 			    VFid.Volume, VFid.Vnode, VFid.Unique, vtype,
< 			    error)); )
< 		
---
> 		     myprintf(("lookup: %s type %o result %d\n",
> 			       coda_f2s(&VFid), vtype, error)); )
1146c1136
<     ViceFid VFid;
---
>     CodaFid VFid;
1191,1192c1181,1182
< 		 myprintf(("create: (%lx.%lx.%lx), result %d\n",
< 			VFid.Volume, VFid.Vnode, VFid.Unique, error)); )
---
> 		  myprintf(("create: %s, result %d\n",
> 			   coda_f2s(&VFid), error)); )
1233,1236c1223,1224
<     CODADEBUG(CODA_REMOVE, myprintf(("remove: %s in %lx.%lx.%lx\n",
< 				   nm, cp->c_fid.Volume, cp->c_fid.Vnode,
< 				   cp->c_fid.Unique)););
< 
---
>     CODADEBUG(CODA_REMOVE, myprintf(("remove: %s in %s\n",
> 				     nm, coda_f2s(&cp->c_fid))););
1295,1300c1283,1286
< 
< 	myprintf(("nb_link:   vp fid: (%lx.%lx.%lx)\n",
< 		  cp->c_fid.Volume, cp->c_fid.Vnode, cp->c_fid.Unique));
< 	myprintf(("nb_link: tdvp fid: (%lx.%lx.%lx)\n",
< 		  tdcp->c_fid.Volume, tdcp->c_fid.Vnode, tdcp->c_fid.Unique));
< 	
---
> 	myprintf(("nb_link:   vp fid: %s\n",
> 		  coda_f2s(&cp->c_fid)));
> 	myprintf(("nb_link: tdvp fid: %s)\n",
> 		  coda_f2s(&tdcp->c_fid)));	
1303,1307c1289,1292
< 	myprintf(("link:   vp fid: (%lx.%lx.%lx)\n",
< 		  cp->c_fid.Volume, cp->c_fid.Vnode, cp->c_fid.Unique));
< 	myprintf(("link: tdvp fid: (%lx.%lx.%lx)\n",
< 		  tdcp->c_fid.Volume, tdcp->c_fid.Vnode, tdcp->c_fid.Unique));
< 
---
> 	myprintf(("link:   vp fid: %s\n",
> 		  coda_f2s(&cp->c_fid)));
> 	myprintf(("link: tdvp fid: %s\n",
> 		  coda_f2s(&tdcp->c_fid)));
1440c1425
<     ViceFid VFid;
---
>     CodaFid VFid;
1483,1485c1468,1470
< 	CODADEBUG( CODA_MKDIR, myprintf(("mkdir: (%lx.%lx.%lx) result %d\n",
< 				    VFid.Volume, VFid.Vnode, VFid.Unique, error)); )
<     } else {
---
> 	CODADEBUG( CODA_MKDIR, myprintf(("mkdir: %s result %d\n",
> 					 coda_f2s(&VFid), error)); )
> 	} else {
1668c1653
< 	CODADEBUG(CODA_READDIR, myprintf(("indirect readdir: fid = (%lx.%lx.%lx), refcnt = %d\n",cp->c_fid.Volume, cp->c_fid.Vnode, cp->c_fid.Unique, vrefcnt(vp))); )
---
> 	CODADEBUG(CODA_READDIR, myprintf(("indirect readdir: fid = %s, refcnt = %d\n", coda_f2s(&cp->c_fid), vp->v_usecount)); )
1801,1802c1786,1787
< 	myprintf(("Attempting lock on %lx.%lx.%lx\n",
< 		  cp->c_fid.Volume, cp->c_fid.Vnode, cp->c_fid.Unique));
---
> 	myprintf(("Attempting lock on %s\n",
> 		  coda_f2s(&cp->c_fid)));
1827,1828c1812,1813
< 	myprintf(("Attempting unlock on %lx.%lx.%lx\n",
< 		  cp->c_fid.Volume, cp->c_fid.Vnode, cp->c_fid.Unique));
---
> 	myprintf(("Attempting unlock on %s\n",
> 		  coda_f2s(&cp->c_fid)));
1947c1932
<  * in a table hashed by fid.Volume and fid.Vnode.  If the cnode for
---
>  * in a table hashed by coda_f2i().  If the cnode for
1954c1939
<      ViceFid *fid; struct mount *vfsp; short type;
---
>      CodaFid *fid; struct mount *vfsp; short type;

#		 Master Coda Makeconf file
# sets:
#	VPATH, DIRS, FLAGS, LIBRARIES, <>_RPC2
# includes:
#	Makefile.setup,	configs/Makeconf.$(SYS)

# 11/18/96 Created, Josh Raiff
# 11/19/96 Modified, Peter Braam


#########################################################
#  Coda 4.0.1 build environment
#  little here should need editing
#########################################################

include $(TOPOBJ)/Makeconf.setup
include $(MAKDIR)/Makeconf.$(SYS)

##############################
# tools
##############################

ALPHACI = $(TOPDIR)/tools/alphaci


##############################
# VPATH
##############################

# edit VPATH appropiately

ifneq ($(SECSRC),)
VPATHTAIL := $(subst $(TOPDIR),,$(VPATH))
OLDVPATH := $(VPATH)
NEWVPATH := $(SECSRC)$(VPATHTAIL):$(VPATH)
VPATH := $(NEWVPATH)
endif

ifneq ($(VPATH),)
colon=:
SHADOWINCLS := -I$(subst $(colon), -I,$(VPATH))
SHADOWPATH  := $(VPATH)
endif

##############################
# Location of objects
##############################

ifeq ($(SHOB),)
INCLDIR=$(TOPOBJ)/include
INCLSPECIAL=$(INCLDIR)
RP2GEN=../rp2gen/rp2gen
PCFGEN=../pcfgen/pcfgen

else

BINSPECIAL = ${ROOT}/BIN-SPECIAL
BINDIR = ${ROOT}/bin
LIBSPECIAL = ${ROOT}/LIB-SPECIAL
LIBDIR=	 ${ROOT}/lib
INCLSPECIAL= ${ROOT}/INCLUDE-SPECIAL
INCLDIR = ${ROOT}/include
MANDIR = ${ROOT}/man
SCRIPTDIR = ${BINDIR}
DOCDIR = ${ROOT}/doc

RP2GEN = $(BINDIR)/rp2gen
PCFGEN = $(BINDIR)/pcfgen

endif
##############################
# Machine independent FLAGS
##############################

CC = gcc
CXX = g++
INSTALL = cp -p

ifeq ($(INCLDIR),$(INCLSPECIAL))
INCLFLAGS := -I- -I. $(SHADOWINCLS) -I$(INCLDIR) $(INCLFLAGS)
INCLPATH  := .:$(SHADOWPATH):$(INCLDIR)
else
INCLFLAGS := -I- -I. $(SHADOWINCLS) -I$(INCLDIR) -I$(INCLSPECIAL) $(INCLFLAGS)
INCLPATH  := .:$(SHADOWPATH):$(INCLDIR):$(INCLSPECIAL)
endif
DEPFLAG   := -MD
MYFLAGS   :=
OPTFLAG   := -O
LIBFLAGS  :=
AFLAGS	  := $(GFLAG) $(DEPFLAG) $(MACHINE_FLAGS) $(MYFLAGS) $(INCLFLAGS)
CFLAGS	  := $(OPTFLAG) $(AFLAGS) -DPRIVATE=static
CXXFLAGS  := $(CFLAGS)
C++FLAGS  := $(CFLAGS)	# Mach uses c++ flags, not CXX

RP2FLAGS  = -n -I . -I $(srcdir) -I $(INCLDIR)

vpath %.h $(INCLPATH)
##############################
# Library definitions
##############################
ifeq	($(SHOB),)

##############################
# CASE 1: use binaries and libraries from tree
##############################

# -- INODEFS --
# platform dependent: choice from user level and kernel level version
# defined in configs/Makeconf.$(SYS)
LIBINODEFS = $(TOPOBJ)/$(INODEFSDIR)/$(INODEFSNAME)

# -- CS --
LIBCS =$(TOPOBJ)/lib-src/libcs/libcs.a

# -- LWP --
# LIBNEWLWP =$(TOPOBJ)/lib-src/mlwp/libnewlwp.a			
LIBOLDLWP =$(TOPOBJ)/lib-src/mlwp/liboldlwp.a			

# -- RVM --
LIBRVM= $(TOPOBJ)/rvm-src/rvm/librvm.a
LIBRDS= $(TOPOBJ)/rvm-src/rds/librds.a	 		
# with threads
LIBRVMLWP = $(TOPOBJ)/rvm-src/rvm/librvmlwp.a
LIBRDSLWP = $(TOPOBJ)/rvm-src/rds/librdslwp.a
# libseg doesn't use threads.
LIBSEG= $(TOPOBJ)/rvm-src/seg/libseg.a 			

# -- CODA --
LIBCODARVM = $(LIBRVMLWP)
LIBCODARDS = $(LIBRDSLWP)
LIBKERNDEP =../kerndep/libkerndep.a   # --- (pioctl, setpag)
LIBAUTH2 =../auth2/libauth2.a
LIBAL = ../libal/libal.a
LIBVOL = ../vol/libvol.a
LIBVICEDEP= ../vicedep/libvicedep.a
LIBVOLUTIL =../volutil/libvolutil.a
LIBVOLSERV =../volutil/libvolserv.a
LIBVV = ../vv/libvv.a
LIBRESOLVE =../resolve/libresolve.a
LIBRESLIB =../res/libreslib.a
LIBUTIL =../util/libutil.a
LIBRPC2 =../rpc2/librpc2.a
LIBSE =../rpc2/libse.a
LIBFAIL =../fail/libfail.a
LIBRVMRES =../rvmres/librvmres.a
LIBDIRLIB= ../dir/libdir.a
LIBVICEERROR  = ../vice/libviceerror.a
LIBDS = ../ds/libds.a

##############################
# RPC2 interface definitions in module vicedep
##############################
CALLBACK_RPC2 = ../vicedep/callback.rpc2
MOND_RPC2 = ../vicedep/mond.rpc2
VCRCOMMON_RPC2 = ../vicedep/vcrcommon.rpc2
VICE_RPC2 = ../vicedep/vice.rpc2
VOLDUMP_RPC2 = ../vicedep/voldump.rpc2
VOLUTIL_RPC2 = ../vicedep/volutil.rpc2
RES_RPC2 = ../vicedep/res.rpc2
ADMON_RPC2 = ../vicedep/admon.rpc2
ADSRV_RPC2 = ../vicedep/adsrv.rpc2
	# needed to pick up "shared" rpc2's
vpath %.rpc2 $(SHADOWRP2)

else
##############################
# CASE 2: using shared SHOBJ
##############################

# -- INODEFS --
# platform dependent: choice from user level and kernel level version
# defined in configs/Makeconf.$(SYS)
LIBINODEFS = $(LIBDIR)/$(INODEFSNAME)

# -- CS --
LIBCS = $(LIBSPECIAL)/libcs.a

# -- LWP --
# LIBNEWLWP = ${LIBSPECIAL}/libnewlwp.a	(should not be used)
LIBOLDLWP = ${LIBSPECIAL}/liboldlwp.a			

# -- RVM --
LIBRVM = $(LIBSPECIAL)/librvm.a
LIBRDS = $(LIBSPECIAL)/librds.a	 		
# threaded
LIBRVMLWP = $(LIBSPECIAL)/librvmlwp.a		
LIBRDSLWP = $(LIBSPECIAL)/librdslwp.a
# libseg doesn't use threads.
LIBSEG = $(LIBSPECIAL)/libseg.a 			

# -- CODA --
LIBCODARVM = $(LIBRVMLWP)
LIBCODARDS = $(LIBRDSLWP)
LIBKERNDEP = $(LIBDIR)/libkerndep.a   # --- (pioctl, setpag)
LIBAUTH2 = $(LIBDIR)/libauth2.a
LIBAL = $(LIBDIR)/libal.a
LIBVOL = ${LIBDIR}/libvol.a
LIBVICEDEP= $(LIBDIR)/libvicedep.a
LIBVOLUTIL = ${LIBDIR}/libvolutil.a
LIBVOLSERV = ${LIBDIR}/libvolserv.a
LIBVV = $(LIBDIR)/libvv.a
LIBRESOLVE = $(LIBDIR)/libresolve.a
LIBRESLIB = ${LIBDIR}/libreslib.a
LIBGROUP = $(LIBDIR)/libgroup.a
LIBUTIL = $(LIBDIR)/libutil.a
LIBRPC2 = $(LIBDIR)/librpc2.a
LIBRPCLIB = $(LIBDIR)/librpclib.a
LIBSE = $(LIBDIR)/libse.a
LIBFAIL = $(LIBDIR)/libfail.a
LIBMTCORE = $(LIBSPECIAL)/libmtcore.a
LIBCOMM = $(LIBDIR)/libcomm.a
LIBRVMRES = $(LIBDIR)/librvmres.a
LIBDIRLIB= $(LIBDIR)/libdir.a
LIBSETPAG = $(LIBDIR)/libsetpag.a
LIBVICEERROR  = $(LIBDIR)/libviceerror.a

# -- Dynamic sets for Potemkin --
LIBDS = $(LIBDIR)/libds.a

##############################
# RPC2 interface definitions in module vicedep
##############################

CALLBACK_RPC2 = $(INCLDIR)/callback.rpc2
MOND_RPC2 = $(INCLDIR)/mond.rpc2
VCRCOMMON_RPC2 = $(INCLDIR)/vcrcommon.rpc2
VICE_RPC2 = $(INCLDIR)/vice.rpc2
VOLDUMP_RPC2 = $(INCLDIR)/voldump.rpc2
VOLUTIL_RPC2 = $(INCLDIR)/volutil.rpc2
RES_RPC2 = $(INCLDIR)/res.rpc2
ADMON_RPC2 = $(INCLDIR)/admon.rpc2
ADSRV_RPC2 = $(INCLDIR)/adsrv.rpc2

	# needed to pick up "shared" rpc2's
vpath %.rpc2 $(INCLDIR)

endif

all: 

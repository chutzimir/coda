all: $(SUBDIRS) $(LIBRARIES)  $(HEADERS) $(EXECUTABLES) $(TESTS)

# Catch all, most versions of gnu make use CXXFLAGS for g++, but mach's 
# version uses C++FLAGS.
C++FLAGS := $(CXXFLAGS)

###############################################################
#  jump into subdirs, keep going until failure
###############################################################
subdirinstall: 
ifdef SUBDIRS
	@for d in $(SUBDIRS) ; do \
	    echo "----> entering directory $$d"; \
	    ${MAKE} -C $$d SUBDIRS= coda; \
	    if [ $$? != 0 ] ; then echo "----> error in $$d"; exit ; else echo "----> done in $$d"; fi \
	done
endif

###################
# Installation rules
###################
ifeq ($(SHOB),)
coda: subdirinstall $(LIBRARIES) $(EXECUTABLES)  $(TESTS) hdrinstall 
else
coda: subdirinstall $(LIBRARIES) $(EXECUTABLES)  $(TESTS) bininstall libinstall hdrinstall 
endif

#####################
# install executables
#####################
bininstall: $(EXECUTABLES)
ifdef EXECUTABLES
	$(TOPDIR)/tools/our-install 755 $(BINDIR) $?
	touch bininstall
endif

#####################
# install libraries
#####################
libinstall: $(LIBRARIES)
ifdef LIBRARIES
	$(TOPDIR)/tools/our-install 644 $(LIBDIR) $?
	touch libinstall
endif

#####################
# install headers
#####################
hdrinstall: $(HEADERS)
ifdef HEADERS
	$(TOPDIR)/tools/our-install 644 $(INCLDIR) $?
	touch hdrinstall
endif

#####################
# re-install 
#####################
clean-install:
	$(RM) hdrinstall libinstall
reinstall: clean-install install

#####################
# source checkin ... 
#####################
srcinstall:
	SRCDIR=$(srcdir); export SRCDIR; $(ALPHACI)

##################
# cleaning: important too
# XXX must add rule to remove rp2gen generated .h files
##################
clean: subdirclean realclean

subdirclean:
ifdef SUBDIRS
	@for d in $(SUBDIRS) ; do \
	    echo "----> entering directory $$d"; \
	    ${MAKE} -C $$d SUBDIRS= realclean; \
	    echo "----> done in $$d"; \
	done
endif

realclean:
	$(RM) *.o *.a *.client.c *.server.c *.multi.c core
	$(RM) $(EXECUTABLES) $(LIBRARIES) $(TESTS) 
	$(RM) hdrinstall libinstall bininstall
	$(RM) *.l.c *.pt.c *.l.o *.pt.o

##################
# build coda from the top
##################
topcoda:
	${MAKE} -C kernel-src/vfs/$(SHORTSYS) hdrinstall 
ifneq ($(SYS),i386_linux2)
	${MAKE} -C kernel-src/ifs/$(SHORTSYS) coda; 
endif
	${MAKE} -C lib-src coda 
	${MAKE} -C rvm-src coda 
	${MAKE} -C coda-src coda

##################
# build a single subdirectory
##################
ifdef SUBDIRS
$(SUBDIRS): FORCE
	echo "----> entering $@"; \
	${MAKE} -C $@ all; 
endif


##################
# testing variables
##################
showvar:
	@echo  RP2GEN: $(RP2GEN)
	@echo  SHADOWINCLS: $(SHADOWINCLS)
	@echo  SHADOWRP2: $(SHADOWRP2)
	@echo  VPATH: $(VPATH)
	@echo  SECSRC: $(SECSRC) 
	@echo  CFLAGS: $(CFLAGS)
	@echo  TOPDIR: $(TOPDIR) 

##################
# linting
##################
lint: $(SOURCES)
	lint $(INCDIRS) $(SOURCES)

##################
# suffix rules:
##################

%.o: %.s
	$(CPP) -P -D__ASSEMBLY__ $(CFLAGS) $< > $*.ss
	$(AS) -o $@ $*.ss
	$(RM) $*.ss

%.a:
	$(AR) rv $@ $?
	ranlib $@

%.doc: %.mss
	-scribe $?  # Scribe doesn't exist most places.

%.client.cc %.server.cc %.multi.cc %.client.c %.server.c %.multi.c %.h: %.rpc2
	${RP2GEN} ${RP2FLAGS} $<

ifndef NO_LEX
lex.yy.c:
	$(LEX) $(LFLAGS) $<

y.tab.c:
	$(YACC) $(YFLAGS) $<
endif

.PHONY FORCE:

########################
# If you need to override globally during the build, place
# Makeconf.overrule at the top of your build tree and uncomment
# the line below
########################

ifdef OVERRIDE
include $(TOPOBJ)/Makeconf.override
endif

